{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","_Utils_Tuple2","_Debug_crash","key","elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","curr","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_foldl","acc","_JsArray_foldr","_JsArray_map","_JsArray_indexedMap","_JsArray_slice","from","to","slice","_JsArray_appendN","dest","source","destLen","itemsToCopy","identifier","Error","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_String_join","sep","strs","join","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","field","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","decoders","g","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_instantiateManager","info","sendToApp","router","undefined","onEffects","onSelfMsg","cmdMap","subMap","loop","state","msg","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","home","_Platform_gatherEffects","isCmd","bag","taggers","k","effect","q","p","l","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","G","stopPropagation","aY","currentEventNode","aU","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","init","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","cN","dF","dm","initialModel","view","dH","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","exports","elm$core$Array$Array_elm_builtin","elm$core$Dict$foldr","left","$temp$func","$temp$acc","elm$core$List$cons","dict","elm$core$Elm$JsArray$foldr","elm$core$Array$foldr","baseCase","_n0","tree","tail","helper","elm$core$Array$toList","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Array$SubTree","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Tuple$first","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","elm$core$Array$repeat","LesleyLai$elm_grid$Grid$repeat","elem","LesleyLai$elm_grid$Grid$inRange","elm$core$Array$bitMask","elm$core$Elm$JsArray$unsafeGet","elm$core$Elm$JsArray$unsafeSet","elm$core$Array$setHelp","pos","elm$core$Array$tailIndex","elm$core$Array$set","startShift","LesleyLai$elm_grid$Grid$set","grid","elm$core$Maybe$Just","elm$core$Maybe$Nothing","author$project$Model$initGameState","a3","a8","bU","elm$core$Array$getHelp","elm$core$Array$get","LesleyLai$elm_grid$Grid$get","LesleyLai$elm_grid$Grid$height","LesleyLai$elm_grid$Grid$width","author$project$Update$getDirection","_n1","author$project$Update$addDirection","author$project$Update$getSandwich","dir","player","nextPos","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","author$project$Update$directions","elm$core$List$filter","isGood","author$project$Update$neighbors","board","newX","newY","elm$core$List$maybeCons","mx","elm$core$List$filterMap","author$project$Update$getSandwiches","neighborPos","sandwich","elm$core$List$append","elm$core$List$concat","lists","elm$core$List$concatMap","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","author$project$Update$allMoves","elm$core$String$fromInt","elm$core$String$join","chunks","_List_toArray","elm$core$Platform$Cmd$none","author$project$Update$init","cc","cF","c1","dI","author$project$Update$nextPlayer","elm$core$Elm$JsArray$foldl","elm$core$Array$foldl","LesleyLai$elm_grid$Grid$foldl","author$project$Update$countPieces","piece","author$project$Update$move","pieceToFlip","newState","_n3","newMoves","flippedState","flippedMoves","whiteCount","blackCount","author$project$Update$winner","author$project$Update$isHuman","author$project$Update$tryMoveAI","author$project$Update$update","agent","newModel","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Elm$JsArray$map","elm$core$Array$map","elm$core$Elm$JsArray$appendN","elm$core$Elm$JsArray$slice","elm$core$Array$appendHelpBuilder","notAppended","appended","elm$core$List$drop","drop","elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","rest","initialBuilder","elm$core$Array$fetchNewTail","end","treeEnd","elm$core$Array$hoistTree","oldShift","newShift","elm$core$Array$sliceTree","endIdx","lastPos","newSub","elm$core$Array$sliceRight","elm$core$Array$translateIndex","posIndex","elm$core$Array$slice","correctTo","correctFrom","elm$core$Basics$compare","elm$core$Dict$get","targetKey","right","elm$core$Dict$member","elm$core$Set$member","elm$json$Json$Decode$succeed","elm$html$Html$div","elm$core$Tuple$second","elm$json$Json$Encode$string","elm$html$Html$Attributes$class","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$classList","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","author$project$View$cellView","movesMap","cell","cellAttributes","elm$core$Elm$JsArray$indexedMap","elm$core$Array$indexedMap","mappedLeaf","elm$html$Html$Attributes$style","author$project$View$rowView","row","author$project$View$boardView","rows","elm$html$Html$text","author$project$Update$ChangeAgentMsg","elm$html$Html$p","elm$core$Maybe$map","maybe","elm$core$Maybe$withDefault","_default","elm$html$Html$Attributes$attribute","test","_VirtualDom_noOnOrFormAction","_VirtualDom_noJavaScriptOrHtmlUri","elm$svg$Svg$trustedNode","elm$svg$Svg$svg","elm$svg$Svg$Attributes$class","elm$svg$Svg$Attributes$viewBox","elm$svg$Svg$clipPath","elm$svg$Svg$defs","elm$svg$Svg$g","elm$svg$Svg$mask","elm$svg$Svg$path","elm$svg$Svg$rect","elm$svg$Svg$Attributes$clipPath","elm$svg$Svg$Attributes$d","elm$svg$Svg$Attributes$fill","elm$svg$Svg$Attributes$id","elm$svg$Svg$Attributes$mask","elm$svg$Svg$Attributes$maskContentUnits","elm$svg$Svg$Attributes$maskUnits","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$width","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","lattyware$elm_fontawesome$FontAwesome$Icon$allSpace","lattyware$elm_fontawesome$FontAwesome$Icon$corePath","icon","bx","lattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform","transform","outer","inner","maskRect","maskInnerGroup","bj","maskOuterGroup","bu","maskId","cU","maskTag","clipId","lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform","trans","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add","combined","bK","direction","_n2","aH","aI","c5","cC","cB","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform","elm$core$String$fromFloat","elm$svg$Svg$Attributes$transform","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg","containerWidth","iconWidth","path","innerTranslate","innerRotate","scaleY","innerScale","lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked","transforms","ad","Y","mask","width","height","svgTransform","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform","contents","lattyware$elm_fontawesome$FontAwesome$Icon$view","lattyware$elm_fontawesome$FontAwesome$Icon$Icon","prefix","c2","lattyware$elm_fontawesome$FontAwesome$Solid$robot","lattyware$elm_fontawesome$FontAwesome$Solid$user","author$project$View$agentStatusView","pieceCount","isHuman","role","humanClass","aiClass","elm$html$Html$article","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Set$empty","elm$core$Dict$RBNode_elm_builtin","elm$core$Dict$balance","color","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Set$insert","elm$html$Html$h1","elm$core$Task$succeed","elm$core$Task$init","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","_Scheduler_spawn","commands","tasks","Main","elm$core$Basics$always","movesSet","move","set","author$project$View$currentPlayerView","author$project$View$scoresView","author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f5097492.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.aX.ag === region.ba.ag)\n\t{\n\t\treturn 'on line ' + region.aX.ag;\n\t}\n\treturn 'on lines ' + region.aX.ag + ' through ' + region.ba.ag;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cN,\n\t\timpl.dF,\n\t\timpl.dm,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tG: func(record.G),\n\t\taY: record.aY,\n\t\taU: record.aU\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.G;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.aY;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.aU) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cN,\n\t\timpl.dF,\n\t\timpl.dm,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.dH;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cN,\n\t\timpl.dF,\n\t\timpl.dm,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.aj && impl.aj(sendToApp)\n\t\t\tvar view = impl.dH;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.cd);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.dB) && (_VirtualDom_doc.title = title = doc.dB);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.cY;\n\tvar onUrlRequest = impl.cZ;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\taj: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.bC === next.bC\n\t\t\t\t\t\t\t&& curr.bh === next.bh\n\t\t\t\t\t\t\t&& curr.bz.a === next.bz.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tcN: function(flags)\n\t\t{\n\t\t\treturn A3(impl.cN, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tdH: impl.dH,\n\t\tdF: impl.dF,\n\t\tdm: impl.dm\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { cH: 'hidden', cm: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { cH: 'mozHidden', cm: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { cH: 'msHidden', cm: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { cH: 'webkitHidden', cm: 'webkitvisibilitychange' }\n\t\t: { cH: 'hidden', cm: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tbI: _Browser_getScene(),\n\t\tbR: {\n\t\t\taH: _Browser_window.pageXOffset,\n\t\t\taI: _Browser_window.pageYOffset,\n\t\t\tad: _Browser_doc.documentElement.clientWidth,\n\t\t\tY: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tad: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tY: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tbI: {\n\t\t\t\tad: node.scrollWidth,\n\t\t\t\tY: node.scrollHeight\n\t\t\t},\n\t\t\tbR: {\n\t\t\t\taH: node.scrollLeft,\n\t\t\t\taI: node.scrollTop,\n\t\t\t\tad: node.clientWidth,\n\t\t\t\tY: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tbI: _Browser_getScene(),\n\t\t\tbR: {\n\t\t\t\taH: x,\n\t\t\t\taI: y,\n\t\t\t\tad: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tY: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\tcv: {\n\t\t\t\taH: x + rect.left,\n\t\t\t\taI: y + rect.top,\n\t\t\t\tad: rect.width,\n\t\t\t\tY: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Model$AIAgent = 1;\nvar author$project$Model$HumanAgent = 0;\nvar author$project$Model$BlackPiece = 0;\nvar LesleyLai$elm_grid$Grid$Grid = elm$core$Basics$identity;\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$GT = 2;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.f),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.f);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.h) : builder.h;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.f) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.f);\n\t\t}\n\t});\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{h: nodeList, a: (len / elm$core$Array$branchFactor) | 0, f: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\telm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar LesleyLai$elm_grid$Grid$repeat = F3(\n\tfunction (w, h, elem) {\n\t\tvar data = A2(elm$core$Array$repeat, w * h, elem);\n\t\treturn {b: data, c: h, g: w};\n\t});\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$ge = _Utils_ge;\nvar LesleyLai$elm_grid$Grid$inRange = F4(\n\tfunction (x, y, w, h) {\n\t\treturn (x >= 0) && ((y >= 0) && ((_Utils_cmp(x, w) < 0) && (_Utils_cmp(y, h) < 0)));\n\t});\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar subTree = _n0.a;\n\t\t\tvar newSub = A4(elm$core$Array$setHelp, shift - elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _n0.a;\n\t\t\tvar newLeaf = A3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4(elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar LesleyLai$elm_grid$Grid$set = F3(\n\tfunction (_n0, elem, grid) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar w = grid.g;\n\t\tvar h = grid.c;\n\t\tvar data = grid.b;\n\t\treturn A4(LesleyLai$elm_grid$Grid$inRange, x, y, w, h) ? {\n\t\t\tb: A3(elm$core$Array$set, x + (y * h), elem, data),\n\t\t\tc: h,\n\t\t\tg: w\n\t\t} : grid;\n\t});\nvar author$project$Model$WhitePiece = 1;\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar author$project$Model$initBoard = A3(\n\tLesleyLai$elm_grid$Grid$set,\n\t_Utils_Tuple2(4, 4),\n\telm$core$Maybe$Just(1),\n\tA3(\n\t\tLesleyLai$elm_grid$Grid$set,\n\t\t_Utils_Tuple2(4, 3),\n\t\telm$core$Maybe$Just(0),\n\t\tA3(\n\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t_Utils_Tuple2(3, 4),\n\t\t\telm$core$Maybe$Just(0),\n\t\t\tA3(\n\t\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t\t_Utils_Tuple2(3, 3),\n\t\t\t\telm$core$Maybe$Just(1),\n\t\t\t\tA3(LesleyLai$elm_grid$Grid$repeat, 8, 8, elm$core$Maybe$Nothing)))));\nvar author$project$Model$initGameState = {a3: author$project$Model$initBoard, a8: 0, bU: elm$core$Maybe$Nothing};\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar LesleyLai$elm_grid$Grid$get = F2(\n\tfunction (_n0, grid) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar w = grid.g;\n\t\tvar h = grid.c;\n\t\tvar data = grid.b;\n\t\treturn A4(LesleyLai$elm_grid$Grid$inRange, x, y, w, h) ? A2(elm$core$Array$get, x + (y * h), data) : elm$core$Maybe$Nothing;\n\t});\nvar LesleyLai$elm_grid$Grid$height = function (_n0) {\n\tvar w = _n0.g;\n\tvar h = _n0.c;\n\tvar data = _n0.b;\n\treturn h;\n};\nvar LesleyLai$elm_grid$Grid$width = function (_n0) {\n\tvar w = _n0.g;\n\tvar h = _n0.c;\n\tvar data = _n0.b;\n\treturn w;\n};\nvar author$project$Update$Direction = elm$core$Basics$identity;\nvar author$project$Update$getDirection = F2(\n\tfunction (_n0, _n1) {\n\t\tvar x1 = _n0.a;\n\t\tvar y1 = _n0.b;\n\t\tvar x2 = _n1.a;\n\t\tvar y2 = _n1.b;\n\t\treturn _Utils_Tuple2(x2 - x1, y2 - y1);\n\t});\nvar author$project$Update$addDirection = F2(\n\tfunction (_n0, _n1) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar _n2 = _n1;\n\t\tvar dx = _n2.a;\n\t\tvar dy = _n2.b;\n\t\treturn _Utils_Tuple2(x + dx, y + dy);\n\t});\nvar author$project$Update$getSandwich = F4(\n\tfunction (state, pos, dir, acc) {\n\t\tgetSandwich:\n\t\twhile (true) {\n\t\t\tvar player = state.a8;\n\t\t\tvar nextPos = A2(author$project$Update$addDirection, pos, dir);\n\t\t\tvar board = state.a3;\n\t\t\tvar _n0 = A2(LesleyLai$elm_grid$Grid$get, nextPos, board);\n\t\t\tif (_n0.$ === 1) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tif (_n0.a.$ === 1) {\n\t\t\t\t\tvar _n1 = _n0.a;\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\tvar piece = _n0.a.a;\n\t\t\t\t\tif (_Utils_eq(piece, player)) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$state = state,\n\t\t\t\t\t\t\t$temp$pos = nextPos,\n\t\t\t\t\t\t\t$temp$dir = dir,\n\t\t\t\t\t\t\t$temp$acc = A2(elm$core$List$cons, nextPos, acc);\n\t\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\t\tpos = $temp$pos;\n\t\t\t\t\t\tdir = $temp$dir;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tcontinue getSandwich;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$Update$directions = A2(\n\telm$core$List$map,\n\telm$core$Basics$identity,\n\t_List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2(-1, -1),\n\t\t\t_Utils_Tuple2(0, -1),\n\t\t\t_Utils_Tuple2(1, -1),\n\t\t\t_Utils_Tuple2(-1, 0),\n\t\t\t_Utils_Tuple2(1, 0),\n\t\t\t_Utils_Tuple2(-1, 1),\n\t\t\t_Utils_Tuple2(0, 1),\n\t\t\t_Utils_Tuple2(1, 1)\n\t\t]));\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar author$project$Update$neighbors = F2(\n\tfunction (pos, board) {\n\t\treturn A2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (_n0) {\n\t\t\t\tvar newX = _n0.a;\n\t\t\t\tvar newY = _n0.b;\n\t\t\t\treturn (newX >= 0) && ((newY >= 0) && ((_Utils_cmp(\n\t\t\t\t\tnewX,\n\t\t\t\t\tLesleyLai$elm_grid$Grid$width(board)) < 1) && (_Utils_cmp(\n\t\t\t\t\tnewY,\n\t\t\t\t\tLesleyLai$elm_grid$Grid$height(board)) < 1)));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (dir) {\n\t\t\t\t\treturn A2(author$project$Update$addDirection, pos, dir);\n\t\t\t\t},\n\t\t\t\tauthor$project$Update$directions));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$Update$getSandwiches = F2(\n\tfunction (pos, state) {\n\t\tvar board = state.a3;\n\t\treturn A2(\n\t\t\telm$core$List$filterMap,\n\t\t\tfunction (neighborPos) {\n\t\t\t\tvar dir = A2(author$project$Update$getDirection, pos, neighborPos);\n\t\t\t\tvar sandwich = A4(author$project$Update$getSandwich, state, pos, dir, _List_Nil);\n\t\t\t\tif (!sandwich.b) {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Just(sandwich);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(author$project$Update$neighbors, pos, board));\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar author$project$Update$allMoves = function (state) {\n\tvar player = state.a8;\n\tvar board = state.a3;\n\treturn A2(\n\t\telm$core$List$filterMap,\n\t\tfunction (pos) {\n\t\t\tvar _n0 = A2(author$project$Update$getSandwiches, pos, state);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\treturn elm$core$Maybe$Just(pos);\n\t\t\t}\n\t\t},\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (pos) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(LesleyLai$elm_grid$Grid$get, pos, board),\n\t\t\t\t\telm$core$Maybe$Just(elm$core$Maybe$Nothing));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$concatMap,\n\t\t\t\tfunction (y) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(x, y);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$range,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tLesleyLai$elm_grid$Grid$width(board) - 1));\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$range,\n\t\t\t\t\t0,\n\t\t\t\t\tLesleyLai$elm_grid$Grid$height(board) - 1))));\n};\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Update$init = _Utils_Tuple2(\n\t{\n\t\tcc: 0,\n\t\tcF: author$project$Model$initGameState,\n\t\tc1: author$project$Update$allMoves(author$project$Model$initGameState),\n\t\tdI: 1\n\t},\n\telm$core$Platform$Cmd$none);\nvar author$project$Update$nextPlayer = function (player) {\n\tif (player === 1) {\n\t\treturn 0;\n\t} else {\n\t\treturn 1;\n\t}\n};\nvar author$project$Update$flipPlayer = function (state) {\n\treturn _Utils_update(\n\t\tstate,\n\t\t{\n\t\t\ta8: author$project$Update$nextPlayer(state.a8)\n\t\t});\n};\nvar author$project$Model$BlackWin = 0;\nvar author$project$Model$Tie = 2;\nvar author$project$Model$WhiteWin = 1;\nvar elm$core$Elm$JsArray$foldl = _JsArray_foldl;\nvar elm$core$Array$foldl = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldl,\n\t\t\tfunc,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, baseCase, tree),\n\t\t\ttail);\n\t});\nvar LesleyLai$elm_grid$Grid$foldl = F3(\n\tfunction (func, acc, _n0) {\n\t\tvar w = _n0.g;\n\t\tvar h = _n0.c;\n\t\tvar data = _n0.b;\n\t\treturn A3(elm$core$Array$foldl, func, acc, data);\n\t});\nvar author$project$Update$countPieces = function (board) {\n\treturn A3(\n\t\tLesleyLai$elm_grid$Grid$foldl,\n\t\tF2(\n\t\t\tfunction (piece, _n0) {\n\t\t\t\tvar w = _n0.a;\n\t\t\t\tvar b = _n0.b;\n\t\t\t\tif (piece.$ === 1) {\n\t\t\t\t\treturn _Utils_Tuple2(w, b);\n\t\t\t\t} else {\n\t\t\t\t\tif (!piece.a) {\n\t\t\t\t\t\tvar _n2 = piece.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(w, b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n3 = piece.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(w + 1, b);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t_Utils_Tuple2(0, 0),\n\t\tboard);\n};\nvar author$project$Update$winner = function (state) {\n\tvar board = state.a3;\n\tvar _n0 = author$project$Update$countPieces(board);\n\tvar whiteCount = _n0.a;\n\tvar blackCount = _n0.b;\n\treturn (_Utils_cmp(whiteCount, blackCount) > 0) ? 1 : ((_Utils_cmp(whiteCount, blackCount) < 0) ? 0 : 2);\n};\nvar author$project$Update$move = F2(\n\tfunction (_n0, model) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar state = model.cF;\n\t\tvar player = state.a8;\n\t\tvar board = state.a3;\n\t\tvar pieceToFlip = elm$core$List$concat(\n\t\t\tA2(\n\t\t\t\tauthor$project$Update$getSandwiches,\n\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\tstate));\n\t\tvar newBoard = A3(\n\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t_Utils_Tuple2(x, y),\n\t\t\telm$core$Maybe$Just(player),\n\t\t\tA3(\n\t\t\t\telm$core$List$foldl,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (_n3, b) {\n\t\t\t\t\t\tvar xx = _n3.a;\n\t\t\t\t\t\tvar yy = _n3.b;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t\t\t\t\t_Utils_Tuple2(xx, yy),\n\t\t\t\t\t\t\telm$core$Maybe$Just(player),\n\t\t\t\t\t\t\tb);\n\t\t\t\t\t}),\n\t\t\t\tboard,\n\t\t\t\tpieceToFlip));\n\t\tvar newState = {\n\t\t\ta3: newBoard,\n\t\t\ta8: author$project$Update$nextPlayer(player),\n\t\t\tbU: elm$core$Maybe$Nothing\n\t\t};\n\t\tvar newMoves = author$project$Update$allMoves(newState);\n\t\tif (!newMoves.b) {\n\t\t\tvar flippedState = author$project$Update$flipPlayer(newState);\n\t\t\tvar flippedMoves = author$project$Update$allMoves(flippedState);\n\t\t\tif (!flippedMoves.b) {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{\n\t\t\t\t\t\tcF: _Utils_update(\n\t\t\t\t\t\t\tnewState,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbU: elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\tauthor$project$Update$winner(newState))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tc1: _List_Nil\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{cF: flippedState, c1: flippedMoves});\n\t\t\t}\n\t\t} else {\n\t\t\treturn _Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{cF: newState, c1: newMoves});\n\t\t}\n\t});\nvar author$project$Update$isHuman = F2(\n\tfunction (player, model) {\n\t\tif (player === 1) {\n\t\t\treturn !model.dI;\n\t\t} else {\n\t\t\treturn !model.cc;\n\t\t}\n\t});\nvar author$project$Update$tryMoveAI = function (model) {\n\ttryMoveAI:\n\twhile (true) {\n\t\tif (A2(author$project$Update$isHuman, model.cF.a8, model)) {\n\t\t\treturn model;\n\t\t} else {\n\t\t\tvar _n0 = model.c1;\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn model;\n\t\t\t} else {\n\t\t\t\tvar head = _n0.a;\n\t\t\t\tvar tail = _n0.b;\n\t\t\t\tvar newModel = A2(author$project$Update$move, head, model);\n\t\t\t\tvar $temp$model = newModel;\n\t\t\t\tmodel = $temp$model;\n\t\t\t\tcontinue tryMoveAI;\n\t\t\t}\n\t\t}\n\t}\n};\nvar author$project$Update$update = F2(\n\tfunction (msg, model) {\n\t\tif (!msg.$) {\n\t\t\tvar _n1 = msg.a;\n\t\t\tvar x = _n1.a;\n\t\t\tvar y = _n1.b;\n\t\t\tvar newModel = A2(\n\t\t\t\tauthor$project$Update$move,\n\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\tmodel);\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tauthor$project$Update$tryMoveAI(newModel),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tvar player = msg.a;\n\t\t\tvar agent = msg.b;\n\t\t\tvar newModel = function () {\n\t\t\t\tif (!player) {\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{cc: agent});\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{dI: agent});\n\t\t\t\t}\n\t\t\t}();\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tauthor$project$Update$tryMoveAI(newModel),\n\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{h: nodeList, a: nodeListSize, f: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar elm$core$Elm$JsArray$map = _JsArray_map;\nvar elm$core$Array$map = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = function (node) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn elm$core$Array$SubTree(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, helper, subTree));\n\t\t\t} else {\n\t\t\t\tvar values = node.a;\n\t\t\t\treturn elm$core$Array$Leaf(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, func, values));\n\t\t\t}\n\t\t};\n\t\treturn A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA2(elm$core$Elm$JsArray$map, helper, tree),\n\t\t\tA2(elm$core$Elm$JsArray$map, func, tail));\n\t});\nvar elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(builder.f)) - tailLen;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, builder.f, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\th: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.h),\n\t\t\ta: builder.a + 1,\n\t\t\tf: A3(elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\th: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.h),\n\t\t\ta: builder.a + 1,\n\t\t\tf: elm$core$Elm$JsArray$empty\n\t\t} : {h: builder.h, a: builder.a, f: appended});\n\t});\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - elm$core$Array$tailIndex(len),\n\t\t\t\t\t\telm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2(elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2(elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\th: _List_Nil,\n\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\tf: A3(\n\t\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\telm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3(elm$core$List$foldl, elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar sub = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (!_n0.$) {\n\t\t\t\t\tvar sub = _n0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar sub = _n0.a;\n\t\t\tvar newSub = A3(elm$core$Array$sliceTree, shift - elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!elm$core$Elm$JsArray$length(newSub)) ? A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$logBase,\n\t\t\t\t\t\telm$core$Array$branchFactor,\n\t\t\t\t\t\tA2(elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3(elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4(elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$translateIndex = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2(elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2(elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? elm$core$Array$empty : A2(\n\t\t\telm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2(elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar LesleyLai$elm_grid$Grid$rows = function (_n0) {\n\tvar w = _n0.g;\n\tvar h = _n0.c;\n\tvar data = _n0.b;\n\treturn A2(\n\t\telm$core$Array$map,\n\t\tfunction (y) {\n\t\t\treturn A3(elm$core$Array$slice, w * y, (w * y) + w, data);\n\t\t},\n\t\telm$core$Array$fromList(\n\t\t\tA2(elm$core$List$range, 0, h - 1)));\n};\nvar author$project$Update$MoveMsg = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$get, key, dict);\n\t\tif (!_n0.$) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar elm$core$Set$member = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A2(elm$core$Dict$member, key, dict);\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$core$Tuple$second = function (_n0) {\n\tvar y = _n0.b;\n\treturn y;\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$html$Html$Attributes$classList = function (classes) {\n\treturn elm$html$Html$Attributes$class(\n\t\tA2(\n\t\t\telm$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\telm$core$Tuple$first,\n\t\t\t\tA2(elm$core$List$filter, elm$core$Tuple$second, classes))));\n};\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$View$cellView = F3(\n\tfunction (pos, movesMap, cell) {\n\t\tvar pieceView = function (piece) {\n\t\t\treturn A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2('piece', true),\n\t\t\t\t\t\t\t\t_Utils_Tuple2('black', !piece),\n\t\t\t\t\t\t\t\t_Utils_Tuple2('white', piece === 1)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil);\n\t\t};\n\t\tvar cellAttributes = A2(elm$core$Set$member, pos, movesMap) ? _List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2('cell', true),\n\t\t\t\t\t\t_Utils_Tuple2('movable-cell', true)\n\t\t\t\t\t])),\n\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\tauthor$project$Update$MoveMsg(pos))\n\t\t\t]) : _List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2('cell', true)\n\t\t\t\t\t]))\n\t\t\t]);\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\tcellAttributes,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tfunction () {\n\t\t\t\t\tif (cell.$ === 1) {\n\t\t\t\t\t\treturn A2(elm$html$Html$div, _List_Nil, _List_Nil);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar piece = cell.a;\n\t\t\t\t\t\treturn pieceView(piece);\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;\nvar elm$core$Array$indexedMap = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar initialBuilder = {\n\t\t\th: _List_Nil,\n\t\t\ta: 0,\n\t\t\tf: A3(\n\t\t\t\telm$core$Elm$JsArray$indexedMap,\n\t\t\t\tfunc,\n\t\t\t\telm$core$Array$tailIndex(len),\n\t\t\t\ttail)\n\t\t};\n\t\tvar helper = F2(\n\t\t\tfunction (node, builder) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, builder, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\tvar offset = builder.a * elm$core$Array$branchFactor;\n\t\t\t\t\tvar mappedLeaf = elm$core$Array$Leaf(\n\t\t\t\t\t\tA3(elm$core$Elm$JsArray$indexedMap, func, offset, leaf));\n\t\t\t\t\treturn {\n\t\t\t\t\t\th: A2(elm$core$List$cons, mappedLeaf, builder.h),\n\t\t\t\t\t\ta: builder.a + 1,\n\t\t\t\t\t\tf: builder.f\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\telm$core$Array$builderToArray,\n\t\t\ttrue,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));\n\t});\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar author$project$View$rowView = F3(\n\tfunction (y, movesMap, row) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'display', 'flex')\n\t\t\t\t]),\n\t\t\telm$core$Array$toList(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (x, cell) {\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\tauthor$project$View$cellView,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\t\t\t\tmovesMap,\n\t\t\t\t\t\t\t\tcell);\n\t\t\t\t\t\t}),\n\t\t\t\t\trow)));\n\t});\nvar author$project$View$boardView = F2(\n\tfunction (board, movesMap) {\n\t\tvar rows = LesleyLai$elm_grid$Grid$rows(board);\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'margin', 'auto'),\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'width', '400px')\n\t\t\t\t]),\n\t\t\telm$core$Array$toList(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (y, row) {\n\t\t\t\t\t\t\treturn A3(author$project$View$rowView, y, movesMap, row);\n\t\t\t\t\t\t}),\n\t\t\t\t\trows)));\n\t});\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar author$project$View$currentPlayerView = function (state) {\n\tvar _n0 = state.bU;\n\tif (_n0.$ === 1) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t'Current player: ' + ((state.a8 === 1) ? 'White' : 'Black'))\n\t\t\t\t]));\n\t} else {\n\t\tswitch (_n0.a) {\n\t\t\tcase 0:\n\t\t\t\tvar _n1 = _n0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('Black Win')\n\t\t\t\t\t\t]));\n\t\t\tcase 1:\n\t\t\t\tvar _n2 = _n0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('White Win')\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\tvar _n3 = _n0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('Tie')\n\t\t\t\t\t\t]));\n\t\t}\n\t}\n};\nvar author$project$Update$ChangeAgentMsg = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$html$Html$p = _VirtualDom_node('p');\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$virtual_dom$VirtualDom$attribute = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_attribute,\n\t\t\t_VirtualDom_noOnOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar elm$html$Html$Attributes$attribute = elm$virtual_dom$VirtualDom$attribute;\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar elm$svg$Svg$clipPath = elm$svg$Svg$trustedNode('clipPath');\nvar elm$svg$Svg$defs = elm$svg$Svg$trustedNode('defs');\nvar elm$svg$Svg$g = elm$svg$Svg$trustedNode('g');\nvar elm$svg$Svg$mask = elm$svg$Svg$trustedNode('mask');\nvar elm$svg$Svg$path = elm$svg$Svg$trustedNode('path');\nvar elm$svg$Svg$rect = elm$svg$Svg$trustedNode('rect');\nvar elm$svg$Svg$Attributes$clipPath = _VirtualDom_attribute('clip-path');\nvar elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');\nvar elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar elm$svg$Svg$Attributes$id = _VirtualDom_attribute('id');\nvar elm$svg$Svg$Attributes$mask = _VirtualDom_attribute('mask');\nvar elm$svg$Svg$Attributes$maskContentUnits = _VirtualDom_attribute('maskContentUnits');\nvar elm$svg$Svg$Attributes$maskUnits = _VirtualDom_attribute('maskUnits');\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar lattyware$elm_fontawesome$FontAwesome$Icon$allSpace = _List_fromArray(\n\t[\n\t\telm$svg$Svg$Attributes$x('0'),\n\t\telm$svg$Svg$Attributes$y('0'),\n\t\telm$svg$Svg$Attributes$width('100%'),\n\t\telm$svg$Svg$Attributes$height('100%')\n\t]);\nvar lattyware$elm_fontawesome$FontAwesome$Icon$corePath = F2(\n\tfunction (attrs, icon) {\n\t\treturn A2(\n\t\t\telm$svg$Svg$path,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$fill('currentColor'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$d(icon.bx)\n\t\t\t\t\t]),\n\t\t\t\tattrs),\n\t\t\t_List_Nil);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform = F3(\n\tfunction (transform, outer, inner) {\n\t\tvar maskRect = A2(\n\t\t\telm$svg$Svg$rect,\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$svg$Svg$Attributes$fill('white'),\n\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t_List_Nil);\n\t\tvar maskInnerGroup = A2(\n\t\t\telm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[transform.bj]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\ttransform.bx,\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$fill('black'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$d(inner.bx)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t]));\n\t\tvar maskOuterGroup = A2(\n\t\t\telm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[transform.bu]),\n\t\t\t_List_fromArray(\n\t\t\t\t[maskInnerGroup]));\n\t\tvar maskId = 'mask-' + inner.cU;\n\t\tvar maskTag = A2(\n\t\t\telm$svg$Svg$mask,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$id(maskId),\n\t\t\t\t\t\telm$svg$Svg$Attributes$maskUnits('userSpaceOnUse'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$maskContentUnits('userSpaceOnUse')\n\t\t\t\t\t]),\n\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t_List_fromArray(\n\t\t\t\t[maskRect, maskOuterGroup]));\n\t\tvar clipId = 'clip-' + outer.cU;\n\t\tvar defs = A2(\n\t\t\telm$svg$Svg$defs,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$svg$Svg$clipPath,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$id(clipId)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(lattyware$elm_fontawesome$FontAwesome$Icon$corePath, _List_Nil, outer)\n\t\t\t\t\t\t])),\n\t\t\t\t\tmaskTag\n\t\t\t\t]));\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tdefs,\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$rect,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$fill('currentColor'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$clipPath('url(#' + (clipId + ')')),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$mask('url(#' + (maskId + ')'))\n\t\t\t\t\t\t]),\n\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t\t_List_Nil)\n\t\t\t]);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform = F2(\n\tfunction (transform, icon) {\n\t\tif (!transform.$) {\n\t\t\tvar trans = transform.a;\n\t\t\treturn A2(\n\t\t\t\telm$svg$Svg$g,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[trans.bu]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$svg$Svg$g,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[trans.bj]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$corePath,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[trans.bx]),\n\t\t\t\t\t\t\t\ticon)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\treturn A2(lattyware$elm_fontawesome$FontAwesome$Icon$corePath, _List_Nil, icon);\n\t\t}\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add = F2(\n\tfunction (transform, combined) {\n\t\tswitch (transform.$) {\n\t\t\tcase 0:\n\t\t\t\tvar direction = transform.a;\n\t\t\t\tvar amount = function () {\n\t\t\t\t\tif (!direction.$) {\n\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\treturn by;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\treturn -by;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{bK: combined.bK + amount});\n\t\t\tcase 1:\n\t\t\t\tvar direction = transform.a;\n\t\t\t\tvar _n2 = function () {\n\t\t\t\t\tswitch (direction.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(0, -by);\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(0, by);\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(-by, 0);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(by, 0);\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar x = _n2.a;\n\t\t\t\tvar y = _n2.b;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{aH: combined.aH + x, aI: combined.aI + y});\n\t\t\tcase 2:\n\t\t\t\tvar rotation = transform.a;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{c5: combined.c5 + rotation});\n\t\t\tdefault:\n\t\t\t\tif (!transform.a) {\n\t\t\t\t\tvar _n4 = transform.a;\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tcombined,\n\t\t\t\t\t\t{cB: true});\n\t\t\t\t} else {\n\t\t\t\t\tvar _n5 = transform.a;\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tcombined,\n\t\t\t\t\t\t{cC: true});\n\t\t\t\t}\n\t\t}\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize = 16;\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform = {cB: false, cC: false, c5: 0, bK: lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize, aH: 0, aI: 0};\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine = function (transforms) {\n\treturn A3(elm$core$List$foldl, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform, transforms);\n};\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform = function (transforms) {\n\tvar combined = lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine(transforms);\n\treturn _Utils_eq(combined, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(combined);\n};\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg = F3(\n\tfunction (containerWidth, iconWidth, transform) {\n\t\tvar path = 'translate(' + (elm$core$String$fromFloat((iconWidth / 2) * (-1)) + ' -256)');\n\t\tvar outer = 'translate(' + (elm$core$String$fromFloat(containerWidth / 2) + ' 256)');\n\t\tvar innerTranslate = 'translate(' + (elm$core$String$fromFloat(transform.aH * 32) + (',' + (elm$core$String$fromFloat(transform.aI * 32) + ') ')));\n\t\tvar innerRotate = 'rotate(' + (elm$core$String$fromFloat(transform.c5) + ' 0 0)');\n\t\tvar flipY = transform.cC ? (-1) : 1;\n\t\tvar scaleY = (transform.bK / lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipY;\n\t\tvar flipX = transform.cB ? (-1) : 1;\n\t\tvar scaleX = (transform.bK / lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipX;\n\t\tvar innerScale = 'scale(' + (elm$core$String$fromFloat(scaleX) + (', ' + (elm$core$String$fromFloat(scaleY) + ') ')));\n\t\treturn {\n\t\t\tbj: elm$svg$Svg$Attributes$transform(\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tinnerTranslate,\n\t\t\t\t\t_Utils_ap(innerScale, innerRotate))),\n\t\t\tbu: elm$svg$Svg$Attributes$transform(outer),\n\t\t\tbx: elm$svg$Svg$Attributes$transform(path)\n\t\t};\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked = F4(\n\tfunction (attrs, transforms, outer, inner) {\n\t\tvar _n0 = function () {\n\t\t\tif (!outer.$) {\n\t\t\t\tvar mask = outer.a;\n\t\t\t\treturn _Utils_Tuple2(mask.ad, mask.Y);\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(inner.ad, inner.Y);\n\t\t\t}\n\t\t}();\n\t\tvar width = _n0.a;\n\t\tvar height = _n0.b;\n\t\tvar classes = 'svg-inline--fa fa-' + (inner.cU + (' fa-w-' + elm$core$String$fromInt(\n\t\t\telm$core$Basics$ceiling((width / height) * 16))));\n\t\tvar svgTransform = A2(\n\t\t\telm$core$Maybe$map,\n\t\t\tA2(lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg, width, inner.ad),\n\t\t\tlattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform(transforms));\n\t\tvar contents = function () {\n\t\t\tif (!outer.$) {\n\t\t\t\tvar mask = outer.a;\n\t\t\t\treturn A3(\n\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t\tA3(lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg, width, inner.ad, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform),\n\t\t\t\t\t\tsvgTransform),\n\t\t\t\t\tmask,\n\t\t\t\t\tinner);\n\t\t\t} else {\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform, svgTransform, inner)\n\t\t\t\t\t]);\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$svg$Svg$svg,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class(classes),\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$attribute, 'role', 'img'),\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$attribute, 'aria-hidden', 'true'),\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$attribute, 'xmlns', 'http://www.w3.org/2000/svg'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$viewBox(\n\t\t\t\t\t\t'0 0 ' + (elm$core$String$fromInt(width) + (' ' + elm$core$String$fromInt(height))))\n\t\t\t\t\t]),\n\t\t\t\tattrs),\n\t\t\tcontents);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewTransformed = F3(\n\tfunction (attrs, transforms, icon) {\n\t\treturn A4(lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked, attrs, transforms, elm$core$Maybe$Nothing, icon);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewStyled = function (attrs) {\n\treturn A2(lattyware$elm_fontawesome$FontAwesome$Icon$viewTransformed, attrs, _List_Nil);\n};\nvar lattyware$elm_fontawesome$FontAwesome$Icon$view = lattyware$elm_fontawesome$FontAwesome$Icon$viewStyled(_List_Nil);\nvar lattyware$elm_fontawesome$FontAwesome$Icon$Icon = F5(\n\tfunction (prefix, name, width, height, path) {\n\t\treturn {Y: height, cU: name, bx: path, c2: prefix, ad: width};\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Solid$robot = A5(lattyware$elm_fontawesome$FontAwesome$Icon$Icon, 'fas', 'robot', 640, 512, 'M0 256v128c0 17.7 14.3 32 32 32h32V224H32c-17.7 0-32 14.3-32 32zM464 96H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H176c-44.2 0-80 35.8-80 80v272c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V176c0-44.2-35.8-80-80-80zM256 416h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm128 120h-64v-32h64v32zm96 0h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-72h-32v192h32c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32z');\nvar lattyware$elm_fontawesome$FontAwesome$Solid$user = A5(lattyware$elm_fontawesome$FontAwesome$Icon$Icon, 'fas', 'user', 448, 512, 'M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z');\nvar author$project$View$agentStatusView = F3(\n\tfunction (model, player, pieceCount) {\n\t\tvar _n0 = function () {\n\t\t\tif (!player) {\n\t\t\t\treturn _Utils_Tuple2(!model.cc, 'Black Player');\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(!model.dI, 'White Player');\n\t\t\t}\n\t\t}();\n\t\tvar isHuman = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar role = isHuman ? ' (Human)' : ' (AI)';\n\t\tvar _n2 = isHuman ? _Utils_Tuple2('agent-icon-active', 'agent-icon-inactive') : _Utils_Tuple2('agent-icon-inactive', 'agent-icon-active');\n\t\tvar humanClass = _n2.a;\n\t\tvar aiClass = _n2.b;\n\t\treturn A2(\n\t\t\telm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('agent', true)\n\t\t\t\t\t\t]))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2('agent-icon', true),\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(aiClass, true)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tA2(author$project$Update$ChangeAgentMsg, player, 1))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$view(lattyware$elm_fontawesome$FontAwesome$Solid$robot)\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tA2(author$project$Update$ChangeAgentMsg, player, 0)),\n\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2('agent-icon', true),\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(humanClass, true)\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$view(lattyware$elm_fontawesome$FontAwesome$Solid$user)\n\t\t\t\t\t\t])),\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\tname + (role + (' Score: ' + elm$core$String$fromInt(pieceCount))))\n\t\t\t\t]));\n\t});\nvar elm$html$Html$article = _VirtualDom_node('article');\nvar author$project$View$scoresView = function (model) {\n\tvar _n0 = author$project$Update$countPieces(model.cF.a3);\n\tvar whiteCount = _n0.a;\n\tvar blackCount = _n0.b;\n\treturn A2(\n\t\telm$html$Html$article,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA3(author$project$View$agentStatusView, model, 0, blackCount),\n\t\t\t\tA3(author$project$View$agentStatusView, model, 1, whiteCount)\n\t\t\t]));\n};\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;\nvar elm$core$Set$empty = elm$core$Dict$empty;\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A3(elm$core$Dict$insert, key, 0, dict);\n\t});\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar author$project$View$view = function (model) {\n\tvar movesSet = A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (move, set) {\n\t\t\t\treturn A2(elm$core$Set$insert, move, set);\n\t\t\t}),\n\t\telm$core$Set$empty,\n\t\tmodel.c1);\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Reversi-Elm-V2')\n\t\t\t\t\t])),\n\t\t\t\tA2(author$project$View$boardView, model.cF.a3, movesSet),\n\t\t\t\tauthor$project$View$currentPlayerView(model.cF),\n\t\t\t\tauthor$project$View$scoresView(model)\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {bc: fragment, bh: host, bx: path, bz: port_, bC: protocol, bD: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\tcN: function (_n0) {\n\t\t\treturn author$project$Update$init;\n\t\t},\n\t\tdm: elm$core$Basics$always(elm$core$Platform$Sub$none),\n\t\tdF: author$project$Update$update,\n\t\tdH: author$project$View$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}