{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_List_Nil","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_List_toArray","xs","push","_List_sortBy","sort","_Utils_cmp","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Utils_Tuple2","_Debug_crash","key","elm$core$Dict$toList","ord","_Utils_compare","n","elm$core$Basics$LT","elm$core$Basics$GT","elm$core$Basics$EQ","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","ys","root","curr","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_foldl","acc","_JsArray_foldr","_JsArray_map","_JsArray_indexedMap","_JsArray_slice","from","to","slice","_JsArray_appendN","dest","source","destLen","itemsToCopy","identifier","Error","_Basics_pow","Math","pow","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","log","_String_join","sep","strs","join","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_expecting","elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","field","elm$core$Result$isOk","elm$core$Result$Err","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","answer","decoders","g","h","errors","temp","elm$json$Json$Decode$OneOf","elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_instantiateManager","info","sendToApp","router","undefined","onEffects","onSelfMsg","cmdMap","subMap","loop","state","msg","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","home","_Platform_gatherEffects","isCmd","bag","taggers","k","effect","q","p","l","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","stopPropagation","aZ","currentEventNode","aT","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","init","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","cP","dH","$7","initialModel","view","dJ","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","exports","elm$core$Array$Array_elm_builtin","elm$core$Dict$foldr","left","$temp$func","$temp$acc","elm$core$List$cons","dict","elm$core$Elm$JsArray$foldr","elm$core$Array$foldr","baseCase","_n0","tree","tail","helper","elm$core$Array$toList","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Array$Leaf","elm$core$Array$SubTree","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Tuple$first","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","elm$core$Array$repeat","LesleyLai$elm_grid$Grid$repeat","elem","LesleyLai$elm_grid$Grid$inRange","elm$core$Array$bitMask","elm$core$Elm$JsArray$unsafeGet","elm$core$Elm$JsArray$unsafeSet","elm$core$Array$setHelp","pos","elm$core$Array$tailIndex","elm$core$Array$set","startShift","LesleyLai$elm_grid$Grid$set","grid","elm$core$Maybe$Just","elm$core$Maybe$Nothing","author$project$Model$initGameState","a4","a9","bW","elm$core$Array$getHelp","elm$core$Array$get","LesleyLai$elm_grid$Grid$get","LesleyLai$elm_grid$Grid$height","LesleyLai$elm_grid$Grid$width","author$project$Update$getDirection","_n1","author$project$Update$addDirection","author$project$Update$getSandwich","dir","player","nextPos","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","author$project$Update$directions","elm$core$List$filter","isGood","author$project$Update$neighbors","board","newX","newY","elm$core$List$maybeCons","mx","elm$core$List$filterMap","author$project$Update$getSandwiches","neighborPos","sandwich","elm$core$List$append","elm$core$List$concat","lists","elm$core$List$concatMap","elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","author$project$Update$allMoves","elm$core$String$fromInt","elm$core$String$join","chunks","elm$core$Platform$Cmd$none","author$project$Update$init","ce","cH","c3","dK","author$project$Update$nextPlayer","elm$core$Elm$JsArray$foldl","elm$core$Array$foldl","LesleyLai$elm_grid$Grid$foldl","author$project$Update$countPieces","piece","author$project$Update$move","pieceToFlip","newState","_n3","flippedState","whiteCount","blackCount","author$project$Update$winner","author$project$Update$isHuman","elm$core$Basics$pow","author$project$Update$evaluate","whiteCountWeight","blackCountWeight","movesCount","_n2","_n7","blackScore","whiteScore","sum","author$project$Update$normalize","nBlack","nWhite","author$project$Update$createNode","oldState","br","aV","aY","elm$core$List$sortBy","author$project$Update$minimax","nextNodes","sortedNextNodes","author$project$Update$tryMoveAI","author$project$Update$update","newModel","agent","author$project$Update$reset","elm$core$Array$fromListHelp","jsArray","remainingItems","elm$core$Elm$JsArray$map","elm$core$Array$map","elm$core$Elm$JsArray$appendN","elm$core$Elm$JsArray$slice","elm$core$Array$appendHelpBuilder","notAppended","appended","elm$core$List$drop","drop","elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","rest","initialBuilder","elm$core$Array$fetchNewTail","end","treeEnd","elm$core$Array$hoistTree","oldShift","newShift","elm$core$Array$sliceTree","endIdx","lastPos","newSub","elm$core$Array$sliceRight","elm$core$Array$translateIndex","posIndex","elm$core$Array$slice","correctTo","correctFrom","elm$core$Basics$compare","elm$core$Dict$get","targetKey","right","elm$core$Dict$member","elm$core$Set$member","elm$json$Json$Decode$succeed","elm$html$Html$div","elm$core$Tuple$second","elm$json$Json$Encode$string","elm$html$Html$Attributes$class","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$classList","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","author$project$View$cellView","movesMap","cell","cellAttributes","elm$core$Elm$JsArray$indexedMap","elm$core$Array$indexedMap","mappedLeaf","elm$html$Html$Attributes$style","author$project$View$rowView","row","author$project$View$boardView","rows","elm$html$Html$text","author$project$Update$ResetMsg","author$project$Update$ChangeAgentMsg","elm$html$Html$p","elm$core$Maybe$map","maybe","elm$core$Maybe$withDefault","_default","elm$html$Html$Attributes$attribute","test","_VirtualDom_noOnOrFormAction","_VirtualDom_noJavaScriptOrHtmlUri","elm$svg$Svg$trustedNode","elm$svg$Svg$svg","elm$svg$Svg$Attributes$class","elm$svg$Svg$Attributes$viewBox","elm$svg$Svg$clipPath","elm$svg$Svg$defs","elm$svg$Svg$g","elm$svg$Svg$mask","elm$svg$Svg$path","elm$svg$Svg$rect","elm$svg$Svg$Attributes$clipPath","elm$svg$Svg$Attributes$d","elm$svg$Svg$Attributes$fill","elm$svg$Svg$Attributes$id","elm$svg$Svg$Attributes$mask","elm$svg$Svg$Attributes$maskContentUnits","elm$svg$Svg$Attributes$maskUnits","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$width","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","lattyware$elm_fontawesome$FontAwesome$Icon$allSpace","lattyware$elm_fontawesome$FontAwesome$Icon$corePath","icon","bz","lattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform","transform","outer","inner","maskRect","maskInnerGroup","bk","maskOuterGroup","bw","maskId","cW","maskTag","clipId","lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform","trans","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add","combined","bM","direction","aG","aH","c7","cE","cD","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform","elm$core$String$fromFloat","elm$svg$Svg$Attributes$transform","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg","containerWidth","iconWidth","path","innerTranslate","innerRotate","scaleY","innerScale","lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked","transforms","ac","X","mask","width","height","svgTransform","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine","lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform","contents","lattyware$elm_fontawesome$FontAwesome$Icon$view","lattyware$elm_fontawesome$FontAwesome$Icon$Icon","prefix","c4","lattyware$elm_fontawesome$FontAwesome$Solid$robot","lattyware$elm_fontawesome$FontAwesome$Solid$user","author$project$View$agentStatusView","pieceCount","isHuman","role","humanClass","aiClass","elm$html$Html$article","elm$html$Html$button","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Set$empty","elm$core$Dict$RBNode_elm_builtin","elm$core$Dict$balance","color","_n6","lRight","rK","rV","rLeft","rRight","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Set$insert","elm$html$Html$h1","elm$core$Task$succeed","elm$core$Task$init","elm$core$Task$andThen","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Platform$sendToApp","elm$core$Task$spawnCmd","_Scheduler_spawn","commands","tasks","Main","elm$core$Basics$always","movesSet","move","set","author$project$View$currentPlayerView","author$project$View$scoresView","author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c7784d86.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.aX.af === region.bb.af)\n\t{\n\t\treturn 'on line ' + region.aX.af;\n\t}\n\treturn 'on lines ' + region.aX.af + ' through ' + region.bb.af;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cP,\n\t\timpl.dH,\n\t\timpl.$7,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tF: func(record.F),\n\t\taZ: record.aZ,\n\t\taT: record.aT\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.F;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.aZ;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.aT) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cP,\n\t\timpl.dH,\n\t\timpl.$7,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.dJ;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cP,\n\t\timpl.dH,\n\t\timpl.$7,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.ai && impl.ai(sendToApp)\n\t\t\tvar view = impl.dJ;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.cf);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.dD) && (_VirtualDom_doc.title = title = doc.dD);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.c_;\n\tvar onUrlRequest = impl.c$;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tai: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.bE === next.bE\n\t\t\t\t\t\t\t&& curr.bi === next.bi\n\t\t\t\t\t\t\t&& curr.bB.a === next.bB.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tcP: function(flags)\n\t\t{\n\t\t\treturn A3(impl.cP, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tdJ: impl.dJ,\n\t\tdH: impl.dH,\n\t\t$7: impl.$7\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { cJ: 'hidden', co: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { cJ: 'mozHidden', co: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { cJ: 'msHidden', co: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { cJ: 'webkitHidden', co: 'webkitvisibilitychange' }\n\t\t: { cJ: 'hidden', co: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tbK: _Browser_getScene(),\n\t\tbT: {\n\t\t\taG: _Browser_window.pageXOffset,\n\t\t\taH: _Browser_window.pageYOffset,\n\t\t\tac: _Browser_doc.documentElement.clientWidth,\n\t\t\tX: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tac: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tX: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tbK: {\n\t\t\t\tac: node.scrollWidth,\n\t\t\t\tX: node.scrollHeight\n\t\t\t},\n\t\t\tbT: {\n\t\t\t\taG: node.scrollLeft,\n\t\t\t\taH: node.scrollTop,\n\t\t\t\tac: node.clientWidth,\n\t\t\t\tX: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tbK: _Browser_getScene(),\n\t\t\tbT: {\n\t\t\t\taG: x,\n\t\t\t\taH: y,\n\t\t\t\tac: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tX: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\tcx: {\n\t\t\t\taG: x + rect.left,\n\t\t\t\taH: y + rect.top,\n\t\t\t\tac: rect.width,\n\t\t\t\tX: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Model$AIAgent = 1;\nvar author$project$Model$HumanAgent = 0;\nvar author$project$Model$BlackPiece = 0;\nvar LesleyLai$elm_grid$Grid$Grid = elm$core$Basics$identity;\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$GT = 2;\nvar elm$core$Basics$LT = 0;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.e);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.g) : builder.g;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.e) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.e);\n\t\t}\n\t});\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{g: nodeList, a: (len / elm$core$Array$branchFactor) | 0, e: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\telm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar LesleyLai$elm_grid$Grid$repeat = F3(\n\tfunction (w, h, elem) {\n\t\tvar data = A2(elm$core$Array$repeat, w * h, elem);\n\t\treturn {b: data, c: h, f: w};\n\t});\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$ge = _Utils_ge;\nvar LesleyLai$elm_grid$Grid$inRange = F4(\n\tfunction (x, y, w, h) {\n\t\treturn (x >= 0) && ((y >= 0) && ((_Utils_cmp(x, w) < 0) && (_Utils_cmp(y, h) < 0)));\n\t});\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$core$Array$bitMask = 4294967295 >>> (32 - elm$core$Array$shiftStep);\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar subTree = _n0.a;\n\t\t\tvar newSub = A4(elm$core$Array$setHelp, shift - elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _n0.a;\n\t\t\tvar newLeaf = A3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\telm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3(elm$core$Elm$JsArray$unsafeSet, elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4(elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar LesleyLai$elm_grid$Grid$set = F3(\n\tfunction (_n0, elem, grid) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar w = grid.f;\n\t\tvar h = grid.c;\n\t\tvar data = grid.b;\n\t\treturn A4(LesleyLai$elm_grid$Grid$inRange, x, y, w, h) ? {\n\t\t\tb: A3(elm$core$Array$set, x + (y * h), elem, data),\n\t\t\tc: h,\n\t\t\tf: w\n\t\t} : grid;\n\t});\nvar author$project$Model$WhitePiece = 1;\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar author$project$Model$initBoard = A3(\n\tLesleyLai$elm_grid$Grid$set,\n\t_Utils_Tuple2(4, 4),\n\telm$core$Maybe$Just(1),\n\tA3(\n\t\tLesleyLai$elm_grid$Grid$set,\n\t\t_Utils_Tuple2(4, 3),\n\t\telm$core$Maybe$Just(0),\n\t\tA3(\n\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t_Utils_Tuple2(3, 4),\n\t\t\telm$core$Maybe$Just(0),\n\t\t\tA3(\n\t\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t\t_Utils_Tuple2(3, 3),\n\t\t\t\telm$core$Maybe$Just(1),\n\t\t\t\tA3(LesleyLai$elm_grid$Grid$repeat, 8, 8, elm$core$Maybe$Nothing)))));\nvar author$project$Model$initGameState = {a4: author$project$Model$initBoard, a9: 0, bW: elm$core$Maybe$Nothing};\nvar elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar subTree = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$get = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\telm$core$Array$tailIndex(len)) > -1) ? elm$core$Maybe$Just(\n\t\t\tA2(elm$core$Elm$JsArray$unsafeGet, elm$core$Array$bitMask & index, tail)) : elm$core$Maybe$Just(\n\t\t\tA3(elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar LesleyLai$elm_grid$Grid$get = F2(\n\tfunction (_n0, grid) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar w = grid.f;\n\t\tvar h = grid.c;\n\t\tvar data = grid.b;\n\t\treturn A4(LesleyLai$elm_grid$Grid$inRange, x, y, w, h) ? A2(elm$core$Array$get, x + (y * h), data) : elm$core$Maybe$Nothing;\n\t});\nvar LesleyLai$elm_grid$Grid$height = function (_n0) {\n\tvar w = _n0.f;\n\tvar h = _n0.c;\n\tvar data = _n0.b;\n\treturn h;\n};\nvar LesleyLai$elm_grid$Grid$width = function (_n0) {\n\tvar w = _n0.f;\n\tvar h = _n0.c;\n\tvar data = _n0.b;\n\treturn w;\n};\nvar author$project$Update$Direction = elm$core$Basics$identity;\nvar author$project$Update$getDirection = F2(\n\tfunction (_n0, _n1) {\n\t\tvar x1 = _n0.a;\n\t\tvar y1 = _n0.b;\n\t\tvar x2 = _n1.a;\n\t\tvar y2 = _n1.b;\n\t\treturn _Utils_Tuple2(x2 - x1, y2 - y1);\n\t});\nvar author$project$Update$addDirection = F2(\n\tfunction (_n0, _n1) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar _n2 = _n1;\n\t\tvar dx = _n2.a;\n\t\tvar dy = _n2.b;\n\t\treturn _Utils_Tuple2(x + dx, y + dy);\n\t});\nvar author$project$Update$getSandwich = F4(\n\tfunction (state, pos, dir, acc) {\n\t\tgetSandwich:\n\t\twhile (true) {\n\t\t\tvar player = state.a9;\n\t\t\tvar nextPos = A2(author$project$Update$addDirection, pos, dir);\n\t\t\tvar board = state.a4;\n\t\t\tvar _n0 = A2(LesleyLai$elm_grid$Grid$get, nextPos, board);\n\t\t\tif (_n0.$ === 1) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tif (_n0.a.$ === 1) {\n\t\t\t\t\tvar _n1 = _n0.a;\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\tvar piece = _n0.a.a;\n\t\t\t\t\tif (_Utils_eq(piece, player)) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$state = state,\n\t\t\t\t\t\t\t$temp$pos = nextPos,\n\t\t\t\t\t\t\t$temp$dir = dir,\n\t\t\t\t\t\t\t$temp$acc = A2(elm$core$List$cons, nextPos, acc);\n\t\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\t\tpos = $temp$pos;\n\t\t\t\t\t\tdir = $temp$dir;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tcontinue getSandwich;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$Update$directions = A2(\n\telm$core$List$map,\n\telm$core$Basics$identity,\n\t_List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2(-1, -1),\n\t\t\t_Utils_Tuple2(0, -1),\n\t\t\t_Utils_Tuple2(1, -1),\n\t\t\t_Utils_Tuple2(-1, 0),\n\t\t\t_Utils_Tuple2(1, 0),\n\t\t\t_Utils_Tuple2(-1, 1),\n\t\t\t_Utils_Tuple2(0, 1),\n\t\t\t_Utils_Tuple2(1, 1)\n\t\t]));\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar author$project$Update$neighbors = F2(\n\tfunction (pos, board) {\n\t\treturn A2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (_n0) {\n\t\t\t\tvar newX = _n0.a;\n\t\t\t\tvar newY = _n0.b;\n\t\t\t\treturn (newX >= 0) && ((newY >= 0) && ((_Utils_cmp(\n\t\t\t\t\tnewX,\n\t\t\t\t\tLesleyLai$elm_grid$Grid$width(board)) < 1) && (_Utils_cmp(\n\t\t\t\t\tnewY,\n\t\t\t\t\tLesleyLai$elm_grid$Grid$height(board)) < 1)));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\tfunction (dir) {\n\t\t\t\t\treturn A2(author$project$Update$addDirection, pos, dir);\n\t\t\t\t},\n\t\t\t\tauthor$project$Update$directions));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar author$project$Update$getSandwiches = F2(\n\tfunction (pos, state) {\n\t\tvar board = state.a4;\n\t\treturn A2(\n\t\t\telm$core$List$filterMap,\n\t\t\tfunction (neighborPos) {\n\t\t\t\tvar dir = A2(author$project$Update$getDirection, pos, neighborPos);\n\t\t\t\tvar sandwich = A4(author$project$Update$getSandwich, state, pos, dir, _List_Nil);\n\t\t\t\tif (!sandwich.b) {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Just(sandwich);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2(author$project$Update$neighbors, pos, board));\n\t});\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar author$project$Update$allMoves = function (state) {\n\tvar player = state.a9;\n\tvar board = state.a4;\n\treturn A2(\n\t\telm$core$List$filterMap,\n\t\tfunction (pos) {\n\t\t\tvar _n0 = A2(author$project$Update$getSandwiches, pos, state);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\treturn elm$core$Maybe$Just(pos);\n\t\t\t}\n\t\t},\n\t\tA2(\n\t\t\telm$core$List$filter,\n\t\t\tfunction (pos) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2(LesleyLai$elm_grid$Grid$get, pos, board),\n\t\t\t\t\telm$core$Maybe$Just(elm$core$Maybe$Nothing));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$List$concatMap,\n\t\t\t\tfunction (y) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(x, y);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$List$range,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\tLesleyLai$elm_grid$Grid$width(board) - 1));\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$range,\n\t\t\t\t\t0,\n\t\t\t\t\tLesleyLai$elm_grid$Grid$height(board) - 1))));\n};\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Update$init = _Utils_Tuple2(\n\t{\n\t\tce: 0,\n\t\tcH: author$project$Model$initGameState,\n\t\tc3: author$project$Update$allMoves(author$project$Model$initGameState),\n\t\tdK: 1\n\t},\n\telm$core$Platform$Cmd$none);\nvar author$project$Update$nextPlayer = function (player) {\n\tif (player === 1) {\n\t\treturn 0;\n\t} else {\n\t\treturn 1;\n\t}\n};\nvar author$project$Update$flipPlayer = function (state) {\n\treturn _Utils_update(\n\t\tstate,\n\t\t{\n\t\t\ta9: author$project$Update$nextPlayer(state.a9)\n\t\t});\n};\nvar author$project$Model$BlackWin = 0;\nvar author$project$Model$Tie = 2;\nvar author$project$Model$WhiteWin = 1;\nvar elm$core$Elm$JsArray$foldl = _JsArray_foldl;\nvar elm$core$Array$foldl = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldl,\n\t\t\tfunc,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, baseCase, tree),\n\t\t\ttail);\n\t});\nvar LesleyLai$elm_grid$Grid$foldl = F3(\n\tfunction (func, acc, _n0) {\n\t\tvar w = _n0.f;\n\t\tvar h = _n0.c;\n\t\tvar data = _n0.b;\n\t\treturn A3(elm$core$Array$foldl, func, acc, data);\n\t});\nvar author$project$Update$countPieces = function (board) {\n\treturn A3(\n\t\tLesleyLai$elm_grid$Grid$foldl,\n\t\tF2(\n\t\t\tfunction (piece, _n0) {\n\t\t\t\tvar w = _n0.a;\n\t\t\t\tvar b = _n0.b;\n\t\t\t\tif (piece.$ === 1) {\n\t\t\t\t\treturn _Utils_Tuple2(w, b);\n\t\t\t\t} else {\n\t\t\t\t\tif (!piece.a) {\n\t\t\t\t\t\tvar _n2 = piece.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(w, b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n3 = piece.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(w + 1, b);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t_Utils_Tuple2(0, 0),\n\t\tboard);\n};\nvar author$project$Update$winner = function (state) {\n\tvar board = state.a4;\n\tvar _n0 = author$project$Update$countPieces(board);\n\tvar whiteCount = _n0.a;\n\tvar blackCount = _n0.b;\n\treturn (_Utils_cmp(whiteCount, blackCount) > 0) ? 1 : ((_Utils_cmp(whiteCount, blackCount) < 0) ? 0 : 2);\n};\nvar author$project$Update$move = F2(\n\tfunction (_n0, state) {\n\t\tvar x = _n0.a;\n\t\tvar y = _n0.b;\n\t\tvar player = state.a9;\n\t\tvar board = state.a4;\n\t\tvar pieceToFlip = elm$core$List$concat(\n\t\t\tA2(\n\t\t\t\tauthor$project$Update$getSandwiches,\n\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\tstate));\n\t\tvar newBoard = A3(\n\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t_Utils_Tuple2(x, y),\n\t\t\telm$core$Maybe$Just(player),\n\t\t\tA3(\n\t\t\t\telm$core$List$foldl,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (_n3, b) {\n\t\t\t\t\t\tvar xx = _n3.a;\n\t\t\t\t\t\tvar yy = _n3.b;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\tLesleyLai$elm_grid$Grid$set,\n\t\t\t\t\t\t\t_Utils_Tuple2(xx, yy),\n\t\t\t\t\t\t\telm$core$Maybe$Just(player),\n\t\t\t\t\t\t\tb);\n\t\t\t\t\t}),\n\t\t\t\tboard,\n\t\t\t\tpieceToFlip));\n\t\tvar newState = {\n\t\t\ta4: newBoard,\n\t\t\ta9: author$project$Update$nextPlayer(player),\n\t\t\tbW: elm$core$Maybe$Nothing\n\t\t};\n\t\tvar newMoves = author$project$Update$allMoves(newState);\n\t\tif (!newMoves.b) {\n\t\t\tvar flippedState = author$project$Update$flipPlayer(newState);\n\t\t\tvar flippedMoves = author$project$Update$allMoves(flippedState);\n\t\t\tif (!flippedMoves.b) {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tnewState,\n\t\t\t\t\t{\n\t\t\t\t\t\tbW: elm$core$Maybe$Just(\n\t\t\t\t\t\t\tauthor$project$Update$winner(newState))\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn flippedState;\n\t\t\t}\n\t\t} else {\n\t\t\treturn newState;\n\t\t}\n\t});\nvar author$project$Update$reset = function (model) {\n\treturn _Utils_update(\n\t\tmodel,\n\t\t{\n\t\t\tcH: author$project$Model$initGameState,\n\t\t\tc3: author$project$Update$allMoves(author$project$Model$initGameState)\n\t\t});\n};\nvar author$project$Update$isHuman = F2(\n\tfunction (player, model) {\n\t\tif (player === 1) {\n\t\t\treturn !model.dK;\n\t\t} else {\n\t\t\treturn !model.ce;\n\t\t}\n\t});\nvar author$project$Update$normalize = function (_n0) {\n\tvar blackScore = _n0.a;\n\tvar whiteScore = _n0.b;\n\tvar sum = blackScore + whiteScore;\n\treturn _Utils_Tuple2(blackScore / sum, whiteScore / sum);\n};\nvar elm$core$Basics$pow = _Basics_pow;\nvar author$project$Update$evaluate = function (state) {\n\tvar _n0 = author$project$Update$countPieces(state.a4);\n\tvar whiteCount = _n0.a;\n\tvar blackCount = _n0.b;\n\tvar _n1 = _Utils_Tuple2(1.0e-2 * whiteCount, 1.0e-2 * blackCount);\n\tvar whiteCountWeight = _n1.a;\n\tvar blackCountWeight = _n1.b;\n\tvar movesCount = elm$core$List$length(\n\t\tauthor$project$Update$allMoves(state));\n\tvar _n2 = function () {\n\t\tvar _n3 = state.bW;\n\t\tif (!_n3.$) {\n\t\t\tswitch (_n3.a) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar _n4 = _n3.a;\n\t\t\t\t\treturn _Utils_Tuple2(1 + blackCountWeight, whiteCountWeight);\n\t\t\t\tcase 1:\n\t\t\t\t\tvar _n5 = _n3.a;\n\t\t\t\t\treturn _Utils_Tuple2(blackCountWeight, 1 + whiteCountWeight);\n\t\t\t\tdefault:\n\t\t\t\t\tvar _n6 = _n3.a;\n\t\t\t\t\treturn _Utils_Tuple2(0.5 + blackCountWeight, 0.5 + whiteCountWeight);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _Utils_Tuple2(0.5 + blackCountWeight, 0.5 + whiteCountWeight);\n\t\t}\n\t}();\n\tvar blackScore = _n2.a;\n\tvar whiteScore = _n2.b;\n\tvar _n7 = author$project$Update$normalize(\n\t\t_Utils_Tuple2(blackScore, whiteScore));\n\tvar nBlack = _n7.a;\n\tvar nWhite = _n7.b;\n\tvar _n8 = state.a9;\n\tif (_n8 === 1) {\n\t\treturn (A2(elm$core$Basics$pow, nWhite, 2) - A2(elm$core$Basics$pow, nBlack, 2)) + (movesCount / 10);\n\t} else {\n\t\treturn (A2(elm$core$Basics$pow, nBlack, 2) - A2(elm$core$Basics$pow, nWhite, 2)) + (movesCount / 10);\n\t}\n};\nvar author$project$Update$createNode = F2(\n\tfunction (oldState, m) {\n\t\tvar newState = A2(author$project$Update$move, m, oldState);\n\t\tvar score = author$project$Update$evaluate(newState);\n\t\treturn {br: m, aV: score, aY: newState};\n\t});\nvar elm$core$List$sortBy = _List_sortBy;\nvar author$project$Update$minimax = F2(\n\tfunction (state, maxDepth) {\n\t\tvar nextNodes = A2(\n\t\t\telm$core$List$map,\n\t\t\tfunction (m) {\n\t\t\t\treturn A2(author$project$Update$createNode, state, m);\n\t\t\t},\n\t\t\tauthor$project$Update$allMoves(state));\n\t\tvar sortedNextNodes = A2(\n\t\t\telm$core$List$sortBy,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.aV;\n\t\t\t},\n\t\t\tnextNodes);\n\t\tif (!sortedNextNodes.b) {\n\t\t\treturn state;\n\t\t} else {\n\t\t\tvar hd = sortedNextNodes.a;\n\t\t\treturn hd.aY;\n\t\t}\n\t});\nvar author$project$Update$tryMoveAI = function (model) {\n\ttryMoveAI:\n\twhile (true) {\n\t\tvar state = model.cH;\n\t\tif (A2(author$project$Update$isHuman, model.cH.a9, model)) {\n\t\t\treturn model;\n\t\t} else {\n\t\t\tvar newState = A2(author$project$Update$minimax, state, 5);\n\t\t\tvar $temp$model = _Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tcH: newState,\n\t\t\t\t\tc3: author$project$Update$allMoves(newState)\n\t\t\t\t});\n\t\t\tmodel = $temp$model;\n\t\t\tcontinue tryMoveAI;\n\t\t}\n\t}\n};\nvar author$project$Update$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\tvar _n1 = msg.a;\n\t\t\t\tvar x = _n1.a;\n\t\t\t\tvar y = _n1.b;\n\t\t\t\tvar newState = A2(\n\t\t\t\t\tauthor$project$Update$move,\n\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\tmodel.cH);\n\t\t\t\tvar newModel = _Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{\n\t\t\t\t\t\tcH: newState,\n\t\t\t\t\t\tc3: author$project$Update$allMoves(newState)\n\t\t\t\t\t});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tauthor$project$Update$tryMoveAI(newModel),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar player = msg.a;\n\t\t\t\tvar agent = msg.b;\n\t\t\t\tvar newModel = function () {\n\t\t\t\t\tif (!player) {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{ce: agent});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{dK: agent});\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tauthor$project$Update$tryMoveAI(newModel),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tauthor$project$Update$tryMoveAI(\n\t\t\t\t\t\tauthor$project$Update$reset(model)),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _n0.a;\n\t\t\tvar remainingItems = _n0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\telm$core$Elm$JsArray$length(jsArray),\n\t\t\t\telm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{g: nodeList, a: nodeListSize, e: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\telm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn elm$core$Array$empty;\n\t} else {\n\t\treturn A3(elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar elm$core$Elm$JsArray$map = _JsArray_map;\nvar elm$core$Array$map = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar startShift = _n0.b;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = function (node) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn elm$core$Array$SubTree(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, helper, subTree));\n\t\t\t} else {\n\t\t\t\tvar values = node.a;\n\t\t\t\treturn elm$core$Array$Leaf(\n\t\t\t\t\tA2(elm$core$Elm$JsArray$map, func, values));\n\t\t\t}\n\t\t};\n\t\treturn A4(\n\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA2(elm$core$Elm$JsArray$map, helper, tree),\n\t\t\tA2(elm$core$Elm$JsArray$map, func, tail));\n\t});\nvar elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = (elm$core$Array$branchFactor - elm$core$Elm$JsArray$length(builder.e)) - tailLen;\n\t\tvar appended = A3(elm$core$Elm$JsArray$appendN, elm$core$Array$branchFactor, builder.e, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\tg: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.g),\n\t\t\ta: builder.a + 1,\n\t\t\te: A3(elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\tg: A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.g),\n\t\t\ta: builder.a + 1,\n\t\t\te: elm$core$Elm$JsArray$empty\n\t\t} : {g: builder.g, a: builder.a, e: appended});\n\t});\nvar elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - elm$core$Array$tailIndex(len),\n\t\t\t\t\t\telm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2(elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2(elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\tg: _List_Nil,\n\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\te: A3(\n\t\t\t\t\t\t\telm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\telm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3(elm$core$List$foldl, elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_n0.$) {\n\t\t\t\tvar sub = _n0.a;\n\t\t\t\tvar $temp$shift = shift - elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _n0.a;\n\t\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (!_n0.$) {\n\t\t\t\t\tvar sub = _n0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _n0 = A2(elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (!_n0.$) {\n\t\t\tvar sub = _n0.a;\n\t\t\tvar newSub = A3(elm$core$Array$sliceTree, shift - elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!elm$core$Elm$JsArray$length(newSub)) ? A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\telm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\telm$core$Array$SubTree(newSub),\n\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3(elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\telm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3(elm$core$Elm$JsArray$slice, 0, elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Basics$logBase,\n\t\t\t\t\t\telm$core$Array$branchFactor,\n\t\t\t\t\t\tA2(elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\telm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3(elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4(elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Array$translateIndex = F2(\n\tfunction (index, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2(elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2(elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? elm$core$Array$empty : A2(\n\t\t\telm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2(elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar LesleyLai$elm_grid$Grid$rows = function (_n0) {\n\tvar w = _n0.f;\n\tvar h = _n0.c;\n\tvar data = _n0.b;\n\treturn A2(\n\t\telm$core$Array$map,\n\t\tfunction (y) {\n\t\t\treturn A3(elm$core$Array$slice, w * y, (w * y) + w, data);\n\t\t},\n\t\telm$core$Array$fromList(\n\t\t\tA2(elm$core$List$range, 0, h - 1)));\n};\nvar author$project$Update$MoveMsg = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _n1 = A2(elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_n1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _n0 = A2(elm$core$Dict$get, key, dict);\n\t\tif (!_n0.$) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar elm$core$Set$member = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A2(elm$core$Dict$member, key, dict);\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar elm$core$Tuple$second = function (_n0) {\n\tvar y = _n0.b;\n\treturn y;\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$html$Html$Attributes$classList = function (classes) {\n\treturn elm$html$Html$Attributes$class(\n\t\tA2(\n\t\t\telm$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\telm$core$Tuple$first,\n\t\t\t\tA2(elm$core$List$filter, elm$core$Tuple$second, classes))));\n};\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar author$project$View$cellView = F3(\n\tfunction (pos, movesMap, cell) {\n\t\tvar pieceView = function (piece) {\n\t\t\treturn A2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2('piece', true),\n\t\t\t\t\t\t\t\t_Utils_Tuple2('black', !piece),\n\t\t\t\t\t\t\t\t_Utils_Tuple2('white', piece === 1)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil);\n\t\t};\n\t\tvar cellAttributes = A2(elm$core$Set$member, pos, movesMap) ? _List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2('cell', true),\n\t\t\t\t\t\t_Utils_Tuple2('movable-cell', true)\n\t\t\t\t\t])),\n\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\tauthor$project$Update$MoveMsg(pos))\n\t\t\t]) : _List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2('cell', true)\n\t\t\t\t\t]))\n\t\t\t]);\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\tcellAttributes,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tfunction () {\n\t\t\t\t\tif (cell.$ === 1) {\n\t\t\t\t\t\treturn A2(elm$html$Html$div, _List_Nil, _List_Nil);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar piece = cell.a;\n\t\t\t\t\t\treturn pieceView(piece);\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;\nvar elm$core$Array$indexedMap = F2(\n\tfunction (func, _n0) {\n\t\tvar len = _n0.a;\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar initialBuilder = {\n\t\t\tg: _List_Nil,\n\t\t\ta: 0,\n\t\t\te: A3(\n\t\t\t\telm$core$Elm$JsArray$indexedMap,\n\t\t\t\tfunc,\n\t\t\t\telm$core$Array$tailIndex(len),\n\t\t\t\ttail)\n\t\t};\n\t\tvar helper = F2(\n\t\t\tfunction (node, builder) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldl, helper, builder, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\tvar offset = builder.a * elm$core$Array$branchFactor;\n\t\t\t\t\tvar mappedLeaf = elm$core$Array$Leaf(\n\t\t\t\t\t\tA3(elm$core$Elm$JsArray$indexedMap, func, offset, leaf));\n\t\t\t\t\treturn {\n\t\t\t\t\t\tg: A2(elm$core$List$cons, mappedLeaf, builder.g),\n\t\t\t\t\t\ta: builder.a + 1,\n\t\t\t\t\t\te: builder.e\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\telm$core$Array$builderToArray,\n\t\t\ttrue,\n\t\t\tA3(elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));\n\t});\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar author$project$View$rowView = F3(\n\tfunction (y, movesMap, row) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'display', 'flex')\n\t\t\t\t]),\n\t\t\telm$core$Array$toList(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (x, cell) {\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\tauthor$project$View$cellView,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\t\t\t\tmovesMap,\n\t\t\t\t\t\t\t\tcell);\n\t\t\t\t\t\t}),\n\t\t\t\t\trow)));\n\t});\nvar author$project$View$boardView = F2(\n\tfunction (board, movesMap) {\n\t\tvar rows = LesleyLai$elm_grid$Grid$rows(board);\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'margin', 'auto'),\n\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'width', '400px')\n\t\t\t\t]),\n\t\t\telm$core$Array$toList(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Array$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (y, row) {\n\t\t\t\t\t\t\treturn A3(author$project$View$rowView, y, movesMap, row);\n\t\t\t\t\t\t}),\n\t\t\t\t\trows)));\n\t});\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar author$project$View$currentPlayerView = function (state) {\n\tvar _n0 = state.bW;\n\tif (_n0.$ === 1) {\n\t\treturn A2(\n\t\t\telm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t'Current player: ' + ((state.a9 === 1) ? 'White' : 'Black'))\n\t\t\t\t]));\n\t} else {\n\t\tswitch (_n0.a) {\n\t\t\tcase 0:\n\t\t\t\tvar _n1 = _n0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('Black Win')\n\t\t\t\t\t\t]));\n\t\t\tcase 1:\n\t\t\t\tvar _n2 = _n0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('White Win')\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\tvar _n3 = _n0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text('Tie')\n\t\t\t\t\t\t]));\n\t\t}\n\t}\n};\nvar author$project$Update$ResetMsg = {$: 2};\nvar author$project$Update$ChangeAgentMsg = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$html$Html$p = _VirtualDom_node('p');\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm$virtual_dom$VirtualDom$attribute = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_attribute,\n\t\t\t_VirtualDom_noOnOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar elm$html$Html$Attributes$attribute = elm$virtual_dom$VirtualDom$attribute;\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar elm$svg$Svg$clipPath = elm$svg$Svg$trustedNode('clipPath');\nvar elm$svg$Svg$defs = elm$svg$Svg$trustedNode('defs');\nvar elm$svg$Svg$g = elm$svg$Svg$trustedNode('g');\nvar elm$svg$Svg$mask = elm$svg$Svg$trustedNode('mask');\nvar elm$svg$Svg$path = elm$svg$Svg$trustedNode('path');\nvar elm$svg$Svg$rect = elm$svg$Svg$trustedNode('rect');\nvar elm$svg$Svg$Attributes$clipPath = _VirtualDom_attribute('clip-path');\nvar elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');\nvar elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar elm$svg$Svg$Attributes$id = _VirtualDom_attribute('id');\nvar elm$svg$Svg$Attributes$mask = _VirtualDom_attribute('mask');\nvar elm$svg$Svg$Attributes$maskContentUnits = _VirtualDom_attribute('maskContentUnits');\nvar elm$svg$Svg$Attributes$maskUnits = _VirtualDom_attribute('maskUnits');\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar lattyware$elm_fontawesome$FontAwesome$Icon$allSpace = _List_fromArray(\n\t[\n\t\telm$svg$Svg$Attributes$x('0'),\n\t\telm$svg$Svg$Attributes$y('0'),\n\t\telm$svg$Svg$Attributes$width('100%'),\n\t\telm$svg$Svg$Attributes$height('100%')\n\t]);\nvar lattyware$elm_fontawesome$FontAwesome$Icon$corePath = F2(\n\tfunction (attrs, icon) {\n\t\treturn A2(\n\t\t\telm$svg$Svg$path,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$fill('currentColor'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$d(icon.bz)\n\t\t\t\t\t]),\n\t\t\t\tattrs),\n\t\t\t_List_Nil);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform = F3(\n\tfunction (transform, outer, inner) {\n\t\tvar maskRect = A2(\n\t\t\telm$svg$Svg$rect,\n\t\t\tA2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$svg$Svg$Attributes$fill('white'),\n\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t_List_Nil);\n\t\tvar maskInnerGroup = A2(\n\t\t\telm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[transform.bk]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\ttransform.bz,\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$fill('black'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$d(inner.bz)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t]));\n\t\tvar maskOuterGroup = A2(\n\t\t\telm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[transform.bw]),\n\t\t\t_List_fromArray(\n\t\t\t\t[maskInnerGroup]));\n\t\tvar maskId = 'mask-' + inner.cW;\n\t\tvar maskTag = A2(\n\t\t\telm$svg$Svg$mask,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$id(maskId),\n\t\t\t\t\t\telm$svg$Svg$Attributes$maskUnits('userSpaceOnUse'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$maskContentUnits('userSpaceOnUse')\n\t\t\t\t\t]),\n\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t_List_fromArray(\n\t\t\t\t[maskRect, maskOuterGroup]));\n\t\tvar clipId = 'clip-' + outer.cW;\n\t\tvar defs = A2(\n\t\t\telm$svg$Svg$defs,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$svg$Svg$clipPath,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$id(clipId)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(lattyware$elm_fontawesome$FontAwesome$Icon$corePath, _List_Nil, outer)\n\t\t\t\t\t\t])),\n\t\t\t\t\tmaskTag\n\t\t\t\t]));\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tdefs,\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$rect,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$fill('currentColor'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$clipPath('url(#' + (clipId + ')')),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$mask('url(#' + (maskId + ')'))\n\t\t\t\t\t\t]),\n\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t\t_List_Nil)\n\t\t\t]);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform = F2(\n\tfunction (transform, icon) {\n\t\tif (!transform.$) {\n\t\t\tvar trans = transform.a;\n\t\t\treturn A2(\n\t\t\t\telm$svg$Svg$g,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[trans.bw]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$svg$Svg$g,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[trans.bk]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$corePath,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[trans.bz]),\n\t\t\t\t\t\t\t\ticon)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\treturn A2(lattyware$elm_fontawesome$FontAwesome$Icon$corePath, _List_Nil, icon);\n\t\t}\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add = F2(\n\tfunction (transform, combined) {\n\t\tswitch (transform.$) {\n\t\t\tcase 0:\n\t\t\t\tvar direction = transform.a;\n\t\t\t\tvar amount = function () {\n\t\t\t\t\tif (!direction.$) {\n\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\treturn by;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\treturn -by;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{bM: combined.bM + amount});\n\t\t\tcase 1:\n\t\t\t\tvar direction = transform.a;\n\t\t\t\tvar _n2 = function () {\n\t\t\t\t\tswitch (direction.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(0, -by);\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(0, by);\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(-by, 0);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(by, 0);\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar x = _n2.a;\n\t\t\t\tvar y = _n2.b;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{aG: combined.aG + x, aH: combined.aH + y});\n\t\t\tcase 2:\n\t\t\t\tvar rotation = transform.a;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{c7: combined.c7 + rotation});\n\t\t\tdefault:\n\t\t\t\tif (!transform.a) {\n\t\t\t\t\tvar _n4 = transform.a;\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tcombined,\n\t\t\t\t\t\t{cD: true});\n\t\t\t\t} else {\n\t\t\t\t\tvar _n5 = transform.a;\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tcombined,\n\t\t\t\t\t\t{cE: true});\n\t\t\t\t}\n\t\t}\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize = 16;\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform = {cD: false, cE: false, c7: 0, bM: lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize, aG: 0, aH: 0};\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine = function (transforms) {\n\treturn A3(elm$core$List$foldl, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform, transforms);\n};\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform = function (transforms) {\n\tvar combined = lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine(transforms);\n\treturn _Utils_eq(combined, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform) ? elm$core$Maybe$Nothing : elm$core$Maybe$Just(combined);\n};\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');\nvar lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg = F3(\n\tfunction (containerWidth, iconWidth, transform) {\n\t\tvar path = 'translate(' + (elm$core$String$fromFloat((iconWidth / 2) * (-1)) + ' -256)');\n\t\tvar outer = 'translate(' + (elm$core$String$fromFloat(containerWidth / 2) + ' 256)');\n\t\tvar innerTranslate = 'translate(' + (elm$core$String$fromFloat(transform.aG * 32) + (',' + (elm$core$String$fromFloat(transform.aH * 32) + ') ')));\n\t\tvar innerRotate = 'rotate(' + (elm$core$String$fromFloat(transform.c7) + ' 0 0)');\n\t\tvar flipY = transform.cE ? (-1) : 1;\n\t\tvar scaleY = (transform.bM / lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipY;\n\t\tvar flipX = transform.cD ? (-1) : 1;\n\t\tvar scaleX = (transform.bM / lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipX;\n\t\tvar innerScale = 'scale(' + (elm$core$String$fromFloat(scaleX) + (', ' + (elm$core$String$fromFloat(scaleY) + ') ')));\n\t\treturn {\n\t\t\tbk: elm$svg$Svg$Attributes$transform(\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tinnerTranslate,\n\t\t\t\t\t_Utils_ap(innerScale, innerRotate))),\n\t\t\tbw: elm$svg$Svg$Attributes$transform(outer),\n\t\t\tbz: elm$svg$Svg$Attributes$transform(path)\n\t\t};\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked = F4(\n\tfunction (attrs, transforms, outer, inner) {\n\t\tvar _n0 = function () {\n\t\t\tif (!outer.$) {\n\t\t\t\tvar mask = outer.a;\n\t\t\t\treturn _Utils_Tuple2(mask.ac, mask.X);\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(inner.ac, inner.X);\n\t\t\t}\n\t\t}();\n\t\tvar width = _n0.a;\n\t\tvar height = _n0.b;\n\t\tvar classes = 'svg-inline--fa fa-' + (inner.cW + (' fa-w-' + elm$core$String$fromInt(\n\t\t\telm$core$Basics$ceiling((width / height) * 16))));\n\t\tvar svgTransform = A2(\n\t\t\telm$core$Maybe$map,\n\t\t\tA2(lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg, width, inner.ac),\n\t\t\tlattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform(transforms));\n\t\tvar contents = function () {\n\t\t\tif (!outer.$) {\n\t\t\t\tvar mask = outer.a;\n\t\t\t\treturn A3(\n\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$Maybe$withDefault,\n\t\t\t\t\t\tA3(lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg, width, inner.ac, lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform),\n\t\t\t\t\t\tsvgTransform),\n\t\t\t\t\tmask,\n\t\t\t\t\tinner);\n\t\t\t} else {\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform, svgTransform, inner)\n\t\t\t\t\t]);\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$svg$Svg$svg,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class(classes),\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$attribute, 'role', 'img'),\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$attribute, 'aria-hidden', 'true'),\n\t\t\t\t\t\tA2(elm$html$Html$Attributes$attribute, 'xmlns', 'http://www.w3.org/2000/svg'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$viewBox(\n\t\t\t\t\t\t'0 0 ' + (elm$core$String$fromInt(width) + (' ' + elm$core$String$fromInt(height))))\n\t\t\t\t\t]),\n\t\t\t\tattrs),\n\t\t\tcontents);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewTransformed = F3(\n\tfunction (attrs, transforms, icon) {\n\t\treturn A4(lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked, attrs, transforms, elm$core$Maybe$Nothing, icon);\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Icon$viewStyled = function (attrs) {\n\treturn A2(lattyware$elm_fontawesome$FontAwesome$Icon$viewTransformed, attrs, _List_Nil);\n};\nvar lattyware$elm_fontawesome$FontAwesome$Icon$view = lattyware$elm_fontawesome$FontAwesome$Icon$viewStyled(_List_Nil);\nvar lattyware$elm_fontawesome$FontAwesome$Icon$Icon = F5(\n\tfunction (prefix, name, width, height, path) {\n\t\treturn {X: height, cW: name, bz: path, c4: prefix, ac: width};\n\t});\nvar lattyware$elm_fontawesome$FontAwesome$Solid$robot = A5(lattyware$elm_fontawesome$FontAwesome$Icon$Icon, 'fas', 'robot', 640, 512, 'M0 256v128c0 17.7 14.3 32 32 32h32V224H32c-17.7 0-32 14.3-32 32zM464 96H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H176c-44.2 0-80 35.8-80 80v272c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V176c0-44.2-35.8-80-80-80zM256 416h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm128 120h-64v-32h64v32zm96 0h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-72h-32v192h32c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32z');\nvar lattyware$elm_fontawesome$FontAwesome$Solid$user = A5(lattyware$elm_fontawesome$FontAwesome$Icon$Icon, 'fas', 'user', 448, 512, 'M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z');\nvar author$project$View$agentStatusView = F3(\n\tfunction (model, player, pieceCount) {\n\t\tvar _n0 = function () {\n\t\t\tif (!player) {\n\t\t\t\treturn _Utils_Tuple2(!model.ce, 'Black Player');\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(!model.dK, 'White Player');\n\t\t\t}\n\t\t}();\n\t\tvar isHuman = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar role = isHuman ? ' (Human)' : ' (AI)';\n\t\tvar _n2 = isHuman ? _Utils_Tuple2('agent-icon-active', 'agent-icon-inactive') : _Utils_Tuple2('agent-icon-inactive', 'agent-icon-active');\n\t\tvar humanClass = _n2.a;\n\t\tvar aiClass = _n2.b;\n\t\treturn A2(\n\t\t\telm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('agent', true)\n\t\t\t\t\t\t]))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2('agent-icon', true),\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(aiClass, true)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tA2(author$project$Update$ChangeAgentMsg, player, 1))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$view(lattyware$elm_fontawesome$FontAwesome$Solid$robot)\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tA2(author$project$Update$ChangeAgentMsg, player, 0)),\n\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2('agent-icon', true),\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(humanClass, true)\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tlattyware$elm_fontawesome$FontAwesome$Icon$view(lattyware$elm_fontawesome$FontAwesome$Solid$user)\n\t\t\t\t\t\t])),\n\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\tname + (role + (' Score: ' + elm$core$String$fromInt(pieceCount))))\n\t\t\t\t]));\n\t});\nvar elm$html$Html$article = _VirtualDom_node('article');\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar author$project$View$scoresView = function (model) {\n\tvar _n0 = author$project$Update$countPieces(model.cH.a4);\n\tvar whiteCount = _n0.a;\n\tvar blackCount = _n0.b;\n\treturn A2(\n\t\telm$html$Html$article,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA3(author$project$View$agentStatusView, model, 0, blackCount),\n\t\t\t\tA3(author$project$View$agentStatusView, model, 1, whiteCount),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Update$ResetMsg)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Restart')\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$core$Set$Set_elm_builtin = elm$core$Basics$identity;\nvar elm$core$Set$empty = elm$core$Dict$empty;\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Set$insert = F2(\n\tfunction (key, _n0) {\n\t\tvar dict = _n0;\n\t\treturn A3(elm$core$Dict$insert, key, 0, dict);\n\t});\nvar elm$html$Html$h1 = _VirtualDom_node('h1');\nvar author$project$View$view = function (model) {\n\tvar movesSet = A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (move, set) {\n\t\t\t\treturn A2(elm$core$Set$insert, move, set);\n\t\t\t}),\n\t\telm$core$Set$empty,\n\t\tmodel.c3);\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text('Reversi-Elm-V2')\n\t\t\t\t\t])),\n\t\t\t\tA2(author$project$View$boardView, model.cH.a4, movesSet),\n\t\t\t\tauthor$project$View$currentPlayerView(model.cH),\n\t\t\t\tauthor$project$View$scoresView(model)\n\t\t\t]));\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {bd: fragment, bi: host, bz: path, bB: port_, bE: protocol, bF: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar elm$core$Basics$always = F2(\n\tfunction (a, _n0) {\n\t\treturn a;\n\t});\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\tcP: function (_n0) {\n\t\t\treturn author$project$Update$init;\n\t\t},\n\t\t$7: elm$core$Basics$always(elm$core$Platform$Sub$none),\n\t\tdH: author$project$Update$update,\n\t\tdJ: author$project$View$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}