{"version":3,"sources":["Main.elm","registerServiceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","_Utils_Tuple2","_Debug_crash","key","$","$elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_List_toArray","_List_sortBy","sort","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_foldl","acc","_JsArray_foldr","_JsArray_map","_JsArray_indexedMap","_JsArray_slice","from","to","slice","_JsArray_appendN","dest","source","destLen","itemsToCopy","identifier","Error","_Basics_pow","Math","pow","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","log","_String_join","sep","strs","join","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_wrap","String","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","field","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","answer","decoders","g","h","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_instantiateManager","info","sendToApp","router","undefined","onEffects","onSelfMsg","cmdMap","subMap","loop","state","msg","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_batch","list","m","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","home","_Platform_gatherEffects","isCmd","bag","taggers","k","effect","q","p","l","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","stopPropagation","aY","currentEventNode","aT","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","t","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","init","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","cO","dG","dn","initialModel","view","dH","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","$elm$core$Basics$always","$elm$core$List$cons","$elm$core$Dict$foldr","left","$temp$func","$temp$acc","dict","$elm$core$Elm$JsArray$foldr","$elm$core$Array$foldr","baseCase","_v0","tree","tail","helper","$elm$core$Array$toList","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","$elm$core$String$fromInt","$elm$core$String$join","chunks","$elm$core$List$foldl","$elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","$elm$core$List$range","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Array$Leaf","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Array$SubTree","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","$elm$core$Tuple$first","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","$elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","$elm$json$Json$Decode$succeed","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","_Scheduler_spawn","commands","tasks","exports","$elm$browser$Browser$element","$elm$core$List$append","$elm$core$List$concat","lists","$elm$core$List$concatMap","$elm$core$List$filter","isGood","$elm$core$List$maybeCons","mx","$elm$core$List$filterMap","$elm$core$Array$bitMask","$elm$core$Elm$JsArray$unsafeGet","$elm$core$Array$getHelp","$elm$core$Array$tailIndex","$elm$core$Array$get","startShift","$LesleyLai$elm_grid$Grid$inRange","$LesleyLai$elm_grid$Grid$get","grid","$author$project$Update$getDirection","_v1","$author$project$Update$addDirection","$author$project$Update$getSandwich","pos","dir","player","a8","nextPos","a3","$author$project$Update$directions","$LesleyLai$elm_grid$Grid$height","$LesleyLai$elm_grid$Grid$width","$author$project$Update$neighbors","board","newX","newY","$author$project$Update$getSandwiches","neighborPos","sandwich","$author$project$Update$allMoves","$elm$core$Array$repeat","$LesleyLai$elm_grid$Grid$repeat","elem","$elm$core$Elm$JsArray$unsafeSet","$elm$core$Array$setHelp","$elm$core$Array$set","$LesleyLai$elm_grid$Grid$set","$author$project$Model$initGameState","bW","$elm$core$Platform$Cmd$none","$author$project$Update$init","ce","cG","c2","dI","$elm$core$Platform$Sub$none","$author$project$Update$nextPlayer","$elm$core$Elm$JsArray$foldl","$elm$core$Array$foldl","$LesleyLai$elm_grid$Grid$foldl","$author$project$Update$countPieces","piece","$author$project$Update$move","pieceToFlip","newState","_v3","flippedState","whiteCount","blackCount","$author$project$Update$winner","$author$project$Update$isHuman","$elm$core$Basics$pow","$author$project$Update$whiteCornorScore","$author$project$Update$evaluate","whiteCornor","whiteCountWeight","blackCountWeight","movesCount","_v2","_v7","blackScore","whiteScore","sum","$author$project$Update$normalize","nBlack","nWhite","$elm$core$Basics$min","$elm$core$Maybe$withDefault","_default","maybe","$author$project$Update$minimax","maximizing","newStates","$elm$core$List$minimum","$elm$core$List$sortBy","$author$project$Update$tryMoveAI","newState2","bM","bJ","$author$project$Update$update","newModel","agent","$author$project$Update$reset","$elm$html$Html$div","$elm$core$Elm$JsArray$indexedMap","$elm$core$Array$indexedMap","initialBuilder","mappedLeaf","$elm$json$Json$Encode$string","$elm$html$Html$Attributes$class","$elm$html$Html$Attributes$stringProperty","$elm$core$Tuple$second","$elm$html$Html$Attributes$classList","$elm$core$Basics$compare","$elm$core$Dict$get","targetKey","right","$elm$core$Dict$member","$elm$core$Set$member","$elm$virtual_dom$VirtualDom$on","$elm$html$Html$Events$on","$elm$html$Html$Events$onClick","$author$project$View$cellView","movesMap","cell","cellAttributes","$elm$html$Html$Attributes$style","$author$project$View$rowView","row","$elm$core$Array$fromListHelp","jsArray","remainingItems","$elm$core$Elm$JsArray$map","$elm$core$Array$map","$elm$core$Elm$JsArray$appendN","$elm$core$Elm$JsArray$slice","$elm$core$Array$appendHelpBuilder","notAppended","appended","$elm$core$List$drop","drop","$elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","rest","$elm$core$Array$fetchNewTail","end","treeEnd","$elm$core$Array$hoistTree","oldShift","newShift","$elm$core$Array$sliceTree","endIdx","lastPos","newSub","$elm$core$Array$sliceRight","$elm$core$Array$translateIndex","posIndex","$elm$core$Array$slice","correctTo","correctFrom","$author$project$View$boardView","rows","$elm$html$Html$text","$elm$core$Dict$RBEmpty_elm_builtin","$elm$core$Set$empty","$elm$html$Html$h1","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$balance","color","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","$elm$core$Dict$insert","$elm$core$Set$insert","$author$project$Update$ResetMsg","$author$project$Update$ChangeAgentMsg","$elm$html$Html$p","$lattyware$elm_fontawesome$FontAwesome$Icon$Icon","prefix","width","height","path","X","cV","bx","c3","ac","$lattyware$elm_fontawesome$FontAwesome$Solid$robot","$lattyware$elm_fontawesome$FontAwesome$Solid$user","$elm$html$Html$Attributes$attribute","test","_VirtualDom_noOnOrFormAction","_VirtualDom_noJavaScriptOrHtmlUri","$elm$svg$Svg$Attributes$class","$elm$core$Maybe$map","$lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add","transform","combined","bL","direction","aG","aH","c6","cD","cC","$lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform","$elm$svg$Svg$trustedNode","$elm$svg$Svg$svg","$elm$core$String$fromFloat","$elm$svg$Svg$Attributes$transform","$lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg","containerWidth","iconWidth","outer","innerTranslate","innerRotate","scaleY","innerScale","bj","bu","$elm$svg$Svg$Attributes$viewBox","$elm$svg$Svg$Attributes$height","$elm$svg$Svg$Attributes$width","$elm$svg$Svg$Attributes$x","$elm$svg$Svg$Attributes$y","$lattyware$elm_fontawesome$FontAwesome$Icon$allSpace","$elm$svg$Svg$clipPath","$elm$svg$Svg$Attributes$clipPath","$elm$svg$Svg$Attributes$d","$elm$svg$Svg$Attributes$fill","$elm$svg$Svg$path","$lattyware$elm_fontawesome$FontAwesome$Icon$corePath","icon","$elm$svg$Svg$defs","$elm$svg$Svg$g","$elm$svg$Svg$Attributes$id","$elm$svg$Svg$mask","$elm$svg$Svg$Attributes$mask","$elm$svg$Svg$Attributes$maskContentUnits","$elm$svg$Svg$Attributes$maskUnits","$elm$svg$Svg$rect","$lattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform","inner","maskRect","maskInnerGroup","maskOuterGroup","maskId","maskTag","clipId","$lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform","trans","$lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked","transforms","mask","svgTransform","$lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine","$lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform","contents","$lattyware$elm_fontawesome$FontAwesome$Icon$view","$author$project$View$agentStatusView","pieceCount","isHuman","role","humanClass","aiClass","$elm$html$Html$article","$elm$html$Html$button","Main","movesSet","move","set","$author$project$View$currentPlayerView","$author$project$View$scoresView","$author$project$Main$main","_Platform_mergeExportsProd","obj","this","isLocalhost","registerValidSW","swUrl","navigator","registration","installingWorker","installing","controller","console","error","Elm","URL","process","location","publicUrl","origin","concat","fetch","response","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c5b95537.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.aX.af === region.ba.af)\n\t{\n\t\treturn 'on line ' + region.aX.af;\n\t}\n\treturn 'on lines ' + region.aX.af + ' through ' + region.ba.af;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cO,\n\t\timpl.dG,\n\t\timpl.dn,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tF: func(record.F),\n\t\taY: record.aY,\n\t\taT: record.aT\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.F;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.aY;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.aT) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cO,\n\t\timpl.dG,\n\t\timpl.dn,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.dH;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cO,\n\t\timpl.dG,\n\t\timpl.dn,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.aW && impl.aW(sendToApp)\n\t\t\tvar view = impl.dH;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.cf);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.dC) && (_VirtualDom_doc.title = title = doc.dC);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.cZ;\n\tvar onUrlRequest = impl.c_;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\taW: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.bC === next.bC\n\t\t\t\t\t\t\t&& curr.bh === next.bh\n\t\t\t\t\t\t\t&& curr.bz.a === next.bz.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tcO: function(flags)\n\t\t{\n\t\t\treturn A3(impl.cO, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tdH: impl.dH,\n\t\tdG: impl.dG,\n\t\tdn: impl.dn\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { cI: 'hidden', co: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { cI: 'mozHidden', co: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { cI: 'msHidden', co: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { cI: 'webkitHidden', co: 'webkitvisibilitychange' }\n\t\t: { cI: 'hidden', co: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tbI: _Browser_getScene(),\n\t\tbT: {\n\t\t\taG: _Browser_window.pageXOffset,\n\t\t\taH: _Browser_window.pageYOffset,\n\t\t\tac: _Browser_doc.documentElement.clientWidth,\n\t\t\tX: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tac: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tX: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tbI: {\n\t\t\t\tac: node.scrollWidth,\n\t\t\t\tX: node.scrollHeight\n\t\t\t},\n\t\t\tbT: {\n\t\t\t\taG: node.scrollLeft,\n\t\t\t\taH: node.scrollTop,\n\t\t\t\tac: node.clientWidth,\n\t\t\t\tX: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tbI: _Browser_getScene(),\n\t\t\tbT: {\n\t\t\t\taG: x,\n\t\t\t\taH: y,\n\t\t\t\tac: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tX: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\tcx: {\n\t\t\t\taG: x + rect.left,\n\t\t\t\taH: y + rect.top,\n\t\t\t\tac: rect.width,\n\t\t\t\tX: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\nvar $elm$core$Basics$always = F2(\n\tfunction (a, _v0) {\n\t\treturn a;\n\t});\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.e),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.e);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.g) : builder.g;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.e) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.e);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{g: nodeList, a: (len / $elm$core$Array$branchFactor) | 0, e: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {bc: fragment, bh: host, bx: path, bz: port_, bC: protocol, bD: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $author$project$Model$AIAgent = 1;\nvar $author$project$Model$HumanAgent = 0;\nvar $elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar $elm$core$List$concat = function (lists) {\n\treturn A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);\n};\nvar $elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn $elm$core$List$concat(\n\t\t\tA2($elm$core$List$map, f, list));\n\t});\nvar $elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (!_v0.$) {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar $elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar subTree = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar $elm$core$Array$get = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(\n\t\t\tA2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar $LesleyLai$elm_grid$Grid$inRange = F4(\n\tfunction (x, y, w, h) {\n\t\treturn (x >= 0) && ((y >= 0) && ((_Utils_cmp(x, w) < 0) && (_Utils_cmp(y, h) < 0)));\n\t});\nvar $LesleyLai$elm_grid$Grid$get = F2(\n\tfunction (_v0, grid) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\tvar w = grid.f;\n\t\tvar h = grid.c;\n\t\tvar data = grid.b;\n\t\treturn A4($LesleyLai$elm_grid$Grid$inRange, x, y, w, h) ? A2($elm$core$Array$get, x + (y * h), data) : $elm$core$Maybe$Nothing;\n\t});\nvar $author$project$Update$Direction = $elm$core$Basics$identity;\nvar $author$project$Update$getDirection = F2(\n\tfunction (_v0, _v1) {\n\t\tvar x1 = _v0.a;\n\t\tvar y1 = _v0.b;\n\t\tvar x2 = _v1.a;\n\t\tvar y2 = _v1.b;\n\t\treturn _Utils_Tuple2(x2 - x1, y2 - y1);\n\t});\nvar $author$project$Update$addDirection = F2(\n\tfunction (_v0, _v1) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\tvar _v2 = _v1;\n\t\tvar dx = _v2.a;\n\t\tvar dy = _v2.b;\n\t\treturn _Utils_Tuple2(x + dx, y + dy);\n\t});\nvar $author$project$Update$getSandwich = F4(\n\tfunction (state, pos, dir, acc) {\n\t\tgetSandwich:\n\t\twhile (true) {\n\t\t\tvar player = state.a8;\n\t\t\tvar nextPos = A2($author$project$Update$addDirection, pos, dir);\n\t\t\tvar board = state.a3;\n\t\t\tvar _v0 = A2($LesleyLai$elm_grid$Grid$get, nextPos, board);\n\t\t\tif (_v0.$ === 1) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tif (_v0.a.$ === 1) {\n\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\tvar piece = _v0.a.a;\n\t\t\t\t\tif (_Utils_eq(piece, player)) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar $temp$state = state,\n\t\t\t\t\t\t\t$temp$pos = nextPos,\n\t\t\t\t\t\t\t$temp$dir = dir,\n\t\t\t\t\t\t\t$temp$acc = A2($elm$core$List$cons, nextPos, acc);\n\t\t\t\t\t\tstate = $temp$state;\n\t\t\t\t\t\tpos = $temp$pos;\n\t\t\t\t\t\tdir = $temp$dir;\n\t\t\t\t\t\tacc = $temp$acc;\n\t\t\t\t\t\tcontinue getSandwich;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $author$project$Update$directions = A2(\n\t$elm$core$List$map,\n\t$elm$core$Basics$identity,\n\t_List_fromArray(\n\t\t[\n\t\t\t_Utils_Tuple2(-1, -1),\n\t\t\t_Utils_Tuple2(0, -1),\n\t\t\t_Utils_Tuple2(1, -1),\n\t\t\t_Utils_Tuple2(-1, 0),\n\t\t\t_Utils_Tuple2(1, 0),\n\t\t\t_Utils_Tuple2(-1, 1),\n\t\t\t_Utils_Tuple2(0, 1),\n\t\t\t_Utils_Tuple2(1, 1)\n\t\t]));\nvar $LesleyLai$elm_grid$Grid$height = function (_v0) {\n\tvar w = _v0.f;\n\tvar h = _v0.c;\n\tvar data = _v0.b;\n\treturn h;\n};\nvar $LesleyLai$elm_grid$Grid$width = function (_v0) {\n\tvar w = _v0.f;\n\tvar h = _v0.c;\n\tvar data = _v0.b;\n\treturn w;\n};\nvar $author$project$Update$neighbors = F2(\n\tfunction (pos, board) {\n\t\treturn A2(\n\t\t\t$elm$core$List$filter,\n\t\t\tfunction (_v0) {\n\t\t\t\tvar newX = _v0.a;\n\t\t\t\tvar newY = _v0.b;\n\t\t\t\treturn (newX >= 0) && ((newY >= 0) && ((_Utils_cmp(\n\t\t\t\t\tnewX,\n\t\t\t\t\t$LesleyLai$elm_grid$Grid$width(board)) < 1) && (_Utils_cmp(\n\t\t\t\t\tnewY,\n\t\t\t\t\t$LesleyLai$elm_grid$Grid$height(board)) < 1)));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (dir) {\n\t\t\t\t\treturn A2($author$project$Update$addDirection, pos, dir);\n\t\t\t\t},\n\t\t\t\t$author$project$Update$directions));\n\t});\nvar $author$project$Update$getSandwiches = F2(\n\tfunction (pos, state) {\n\t\tvar board = state.a3;\n\t\treturn A2(\n\t\t\t$elm$core$List$filterMap,\n\t\t\tfunction (neighborPos) {\n\t\t\t\tvar dir = A2($author$project$Update$getDirection, pos, neighborPos);\n\t\t\t\tvar sandwich = A4($author$project$Update$getSandwich, state, pos, dir, _List_Nil);\n\t\t\t\tif (!sandwich.b) {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Just(sandwich);\n\t\t\t\t}\n\t\t\t},\n\t\t\tA2($author$project$Update$neighbors, pos, board));\n\t});\nvar $author$project$Update$allMoves = function (state) {\n\tvar player = state.a8;\n\tvar board = state.a3;\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\tfunction (pos) {\n\t\t\tvar _v0 = A2($author$project$Update$getSandwiches, pos, state);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Just(pos);\n\t\t\t}\n\t\t},\n\t\tA2(\n\t\t\t$elm$core$List$filter,\n\t\t\tfunction (pos) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA2($LesleyLai$elm_grid$Grid$get, pos, board),\n\t\t\t\t\t$elm$core$Maybe$Just($elm$core$Maybe$Nothing));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$concatMap,\n\t\t\t\tfunction (y) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(x, y);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$range,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$LesleyLai$elm_grid$Grid$width(board) - 1));\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$range,\n\t\t\t\t\t0,\n\t\t\t\t\t$LesleyLai$elm_grid$Grid$height(board) - 1))));\n};\nvar $author$project$Model$Black = 0;\nvar $author$project$Model$White = 1;\nvar $LesleyLai$elm_grid$Grid$Grid = $elm$core$Basics$identity;\nvar $elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\t$elm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar $LesleyLai$elm_grid$Grid$repeat = F3(\n\tfunction (w, h, elem) {\n\t\tvar data = A2($elm$core$Array$repeat, w * h, elem);\n\t\treturn {b: data, c: h, f: w};\n\t});\nvar $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar $elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_v0.$) {\n\t\t\tvar subTree = _v0.a;\n\t\t\tvar newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _v0.a;\n\t\t\tvar newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar $elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4($elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar $LesleyLai$elm_grid$Grid$set = F3(\n\tfunction (_v0, elem, grid) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\tvar w = grid.f;\n\t\tvar h = grid.c;\n\t\tvar data = grid.b;\n\t\treturn A4($LesleyLai$elm_grid$Grid$inRange, x, y, w, h) ? {\n\t\t\tb: A3($elm$core$Array$set, x + (y * h), elem, data),\n\t\t\tc: h,\n\t\t\tf: w\n\t\t} : grid;\n\t});\nvar $author$project$Model$initBoard = A3(\n\t$LesleyLai$elm_grid$Grid$set,\n\t_Utils_Tuple2(4, 4),\n\t$elm$core$Maybe$Just(1),\n\tA3(\n\t\t$LesleyLai$elm_grid$Grid$set,\n\t\t_Utils_Tuple2(4, 3),\n\t\t$elm$core$Maybe$Just(0),\n\t\tA3(\n\t\t\t$LesleyLai$elm_grid$Grid$set,\n\t\t\t_Utils_Tuple2(3, 4),\n\t\t\t$elm$core$Maybe$Just(0),\n\t\t\tA3(\n\t\t\t\t$LesleyLai$elm_grid$Grid$set,\n\t\t\t\t_Utils_Tuple2(3, 3),\n\t\t\t\t$elm$core$Maybe$Just(1),\n\t\t\t\tA3($LesleyLai$elm_grid$Grid$repeat, 8, 8, $elm$core$Maybe$Nothing)))));\nvar $author$project$Model$initGameState = {a3: $author$project$Model$initBoard, a8: 0, bW: $elm$core$Maybe$Nothing};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Update$init = _Utils_Tuple2(\n\t{\n\t\tce: 0,\n\t\tcG: $author$project$Model$initGameState,\n\t\tc2: $author$project$Update$allMoves($author$project$Model$initGameState),\n\t\tdI: 1\n\t},\n\t$elm$core$Platform$Cmd$none);\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);\nvar $author$project$Update$nextPlayer = function (player) {\n\tif (player === 1) {\n\t\treturn 0;\n\t} else {\n\t\treturn 1;\n\t}\n};\nvar $author$project$Update$flipPlayer = function (state) {\n\treturn _Utils_update(\n\t\tstate,\n\t\t{\n\t\t\ta8: $author$project$Update$nextPlayer(state.a8)\n\t\t});\n};\nvar $author$project$Model$BlackWin = 0;\nvar $author$project$Model$Tie = 2;\nvar $author$project$Model$WhiteWin = 1;\nvar $elm$core$Elm$JsArray$foldl = _JsArray_foldl;\nvar $elm$core$Array$foldl = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldl,\n\t\t\tfunc,\n\t\t\tA3($elm$core$Elm$JsArray$foldl, helper, baseCase, tree),\n\t\t\ttail);\n\t});\nvar $LesleyLai$elm_grid$Grid$foldl = F3(\n\tfunction (func, acc, _v0) {\n\t\tvar w = _v0.f;\n\t\tvar h = _v0.c;\n\t\tvar data = _v0.b;\n\t\treturn A3($elm$core$Array$foldl, func, acc, data);\n\t});\nvar $author$project$Update$countPieces = function (board) {\n\treturn A3(\n\t\t$LesleyLai$elm_grid$Grid$foldl,\n\t\tF2(\n\t\t\tfunction (piece, _v0) {\n\t\t\t\tvar w = _v0.a;\n\t\t\t\tvar b = _v0.b;\n\t\t\t\tif (piece.$ === 1) {\n\t\t\t\t\treturn _Utils_Tuple2(w, b);\n\t\t\t\t} else {\n\t\t\t\t\tif (!piece.a) {\n\t\t\t\t\t\tvar _v2 = piece.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(w, b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v3 = piece.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(w + 1, b);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}),\n\t\t_Utils_Tuple2(0, 0),\n\t\tboard);\n};\nvar $author$project$Update$winner = function (state) {\n\tvar board = state.a3;\n\tvar _v0 = $author$project$Update$countPieces(board);\n\tvar whiteCount = _v0.a;\n\tvar blackCount = _v0.b;\n\treturn (_Utils_cmp(whiteCount, blackCount) > 0) ? 1 : ((_Utils_cmp(whiteCount, blackCount) < 0) ? 0 : 2);\n};\nvar $author$project$Update$move = F2(\n\tfunction (_v0, state) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\tvar player = state.a8;\n\t\tvar board = state.a3;\n\t\tvar pieceToFlip = $elm$core$List$concat(\n\t\t\tA2(\n\t\t\t\t$author$project$Update$getSandwiches,\n\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\tstate));\n\t\tvar newBoard = A3(\n\t\t\t$LesleyLai$elm_grid$Grid$set,\n\t\t\t_Utils_Tuple2(x, y),\n\t\t\t$elm$core$Maybe$Just(player),\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (_v3, b) {\n\t\t\t\t\t\tvar xx = _v3.a;\n\t\t\t\t\t\tvar yy = _v3.b;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$LesleyLai$elm_grid$Grid$set,\n\t\t\t\t\t\t\t_Utils_Tuple2(xx, yy),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(player),\n\t\t\t\t\t\t\tb);\n\t\t\t\t\t}),\n\t\t\t\tboard,\n\t\t\t\tpieceToFlip));\n\t\tvar newState = {\n\t\t\ta3: newBoard,\n\t\t\ta8: $author$project$Update$nextPlayer(player),\n\t\t\tbW: $elm$core$Maybe$Nothing\n\t\t};\n\t\tvar newMoves = $author$project$Update$allMoves(newState);\n\t\tif (!newMoves.b) {\n\t\t\tvar flippedState = $author$project$Update$flipPlayer(newState);\n\t\t\tvar flippedMoves = $author$project$Update$allMoves(flippedState);\n\t\t\tif (!flippedMoves.b) {\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tnewState,\n\t\t\t\t\t{\n\t\t\t\t\t\tbW: $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$author$project$Update$winner(newState))\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn flippedState;\n\t\t\t}\n\t\t} else {\n\t\t\treturn newState;\n\t\t}\n\t});\nvar $author$project$Update$reset = function (model) {\n\treturn _Utils_update(\n\t\tmodel,\n\t\t{\n\t\t\tcG: $author$project$Model$initGameState,\n\t\t\tc2: $author$project$Update$allMoves($author$project$Model$initGameState)\n\t\t});\n};\nvar $elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $author$project$Update$isHuman = F2(\n\tfunction (player, model) {\n\t\tif (player === 1) {\n\t\t\treturn !model.dI;\n\t\t} else {\n\t\t\treturn !model.ce;\n\t\t}\n\t});\nvar $author$project$Update$normalize = function (_v0) {\n\tvar blackScore = _v0.a;\n\tvar whiteScore = _v0.b;\n\tvar sum = blackScore + whiteScore;\n\treturn _Utils_Tuple2(blackScore / sum, whiteScore / sum);\n};\nvar $elm$core$Basics$pow = _Basics_pow;\nvar $author$project$Update$whiteCornorScore = F2(\n\tfunction (pos, board) {\n\t\tvar _v0 = A2($LesleyLai$elm_grid$Grid$get, pos, board);\n\t\tif (_v0.$ === 1) {\n\t\t\treturn 0.0;\n\t\t} else {\n\t\t\tif (_v0.a.$ === 1) {\n\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\treturn 0.0;\n\t\t\t} else {\n\t\t\t\tif (_v0.a.a === 1) {\n\t\t\t\t\tvar _v2 = _v0.a.a;\n\t\t\t\t\treturn 100.0;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v3 = _v0.a.a;\n\t\t\t\t\treturn -100.0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Update$evaluate = function (state) {\n\tvar _v0 = $author$project$Update$countPieces(state.a3);\n\tvar whiteCount = _v0.a;\n\tvar blackCount = _v0.b;\n\tvar whiteCornor = ((A2(\n\t\t$author$project$Update$whiteCornorScore,\n\t\t_Utils_Tuple2(0, 0),\n\t\tstate.a3) + A2(\n\t\t$author$project$Update$whiteCornorScore,\n\t\t_Utils_Tuple2(0, 7),\n\t\tstate.a3)) + A2(\n\t\t$author$project$Update$whiteCornorScore,\n\t\t_Utils_Tuple2(7, 0),\n\t\tstate.a3)) + A2(\n\t\t$author$project$Update$whiteCornorScore,\n\t\t_Utils_Tuple2(7, 7),\n\t\tstate.a3);\n\tvar _v1 = _Utils_Tuple2(0.01 * whiteCount, 0.01 * blackCount);\n\tvar whiteCountWeight = _v1.a;\n\tvar blackCountWeight = _v1.b;\n\tvar movesCount = $elm$core$List$length(\n\t\t$author$project$Update$allMoves(state));\n\tvar _v2 = function () {\n\t\tvar _v3 = state.bW;\n\t\tif (!_v3.$) {\n\t\t\tswitch (_v3.a) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar _v4 = _v3.a;\n\t\t\t\t\treturn _Utils_Tuple2(1 + blackCountWeight, whiteCountWeight);\n\t\t\t\tcase 1:\n\t\t\t\t\tvar _v5 = _v3.a;\n\t\t\t\t\treturn _Utils_Tuple2(blackCountWeight, 1 + whiteCountWeight);\n\t\t\t\tdefault:\n\t\t\t\t\tvar _v6 = _v3.a;\n\t\t\t\t\treturn _Utils_Tuple2(0.5 + blackCountWeight, 0.5 + whiteCountWeight);\n\t\t\t}\n\t\t} else {\n\t\t\treturn _Utils_Tuple2((0.5 + blackCountWeight) - whiteCornor, (0.5 + whiteCountWeight) + whiteCornor);\n\t\t}\n\t}();\n\tvar blackScore = _v2.a;\n\tvar whiteScore = _v2.b;\n\tvar _v7 = $author$project$Update$normalize(\n\t\t_Utils_Tuple2(blackScore, whiteScore));\n\tvar nBlack = _v7.a;\n\tvar nWhite = _v7.b;\n\tvar _v8 = state.a8;\n\tif (_v8 === 1) {\n\t\treturn (A2($elm$core$Basics$pow, nWhite, 2) - A2($elm$core$Basics$pow, nBlack, 2)) + (movesCount / 10);\n\t} else {\n\t\treturn (A2($elm$core$Basics$pow, nBlack, 2) - A2($elm$core$Basics$pow, nWhite, 2)) + (movesCount / 10);\n\t}\n};\nvar $elm$core$List$maximum = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar $elm$core$List$minimum = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar $author$project$Update$minimax = F3(\n\tfunction (depth, maximizing, state) {\n\t\tif (!depth) {\n\t\t\treturn $author$project$Update$evaluate(state);\n\t\t} else {\n\t\t\tvar newStates = A2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (m) {\n\t\t\t\t\treturn A2($author$project$Update$move, m, state);\n\t\t\t\t},\n\t\t\t\t$author$project$Update$allMoves(state));\n\t\t\treturn maximizing ? A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t(-1.0) / 0.0,\n\t\t\t\t$elm$core$List$maximum(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2($author$project$Update$minimax, depth - 1, false),\n\t\t\t\t\t\tnewStates))) : A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t1.0 / 0.0,\n\t\t\t\t$elm$core$List$minimum(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2($author$project$Update$minimax, depth - 1, true),\n\t\t\t\t\t\tnewStates)));\n\t\t}\n\t});\nvar $elm$core$List$sortBy = _List_sortBy;\nvar $author$project$Update$tryMoveAI = function (model) {\n\ttryMoveAI:\n\twhile (true) {\n\t\tvar state = model.cG;\n\t\tif (A2($author$project$Update$isHuman, model.cG.a8, model)) {\n\t\t\treturn model;\n\t\t} else {\n\t\t\tvar _v0 = model.cG.bW;\n\t\t\tif (_v0.$ === 1) {\n\t\t\t\tvar newStates = A2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (m) {\n\t\t\t\t\t\treturn A2($author$project$Update$move, m, state);\n\t\t\t\t\t},\n\t\t\t\t\t$author$project$Update$allMoves(state));\n\t\t\t\tvar newState2 = A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\tstate,\n\t\t\t\t\t$elm$core$List$head(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\treturn $.bM;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$sortBy,\n\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\treturn $.bJ;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\tfunction (newState) {\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\tbJ: A3($author$project$Update$minimax, 2, false, newState),\n\t\t\t\t\t\t\t\t\t\t\tbM: newState\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tnewStates)))));\n\t\t\t\tvar $temp$model = _Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{\n\t\t\t\t\t\tcG: newState2,\n\t\t\t\t\t\tc2: $author$project$Update$allMoves(newState2)\n\t\t\t\t\t});\n\t\t\t\tmodel = $temp$model;\n\t\t\t\tcontinue tryMoveAI;\n\t\t\t} else {\n\t\t\t\treturn model;\n\t\t\t}\n\t\t}\n\t}\n};\nvar $author$project$Update$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\tvar _v1 = msg.a;\n\t\t\t\tvar x = _v1.a;\n\t\t\t\tvar y = _v1.b;\n\t\t\t\tvar newState = A2(\n\t\t\t\t\t$author$project$Update$move,\n\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\tmodel.cG);\n\t\t\t\tvar newModel = _Utils_update(\n\t\t\t\t\tmodel,\n\t\t\t\t\t{\n\t\t\t\t\t\tcG: newState,\n\t\t\t\t\t\tc2: $author$project$Update$allMoves(newState)\n\t\t\t\t\t});\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Update$tryMoveAI(newModel),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar player = msg.a;\n\t\t\t\tvar agent = msg.b;\n\t\t\t\tvar newModel = function () {\n\t\t\t\t\tif (!player) {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{ce: agent});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{dI: agent});\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Update$tryMoveAI(newModel),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Update$tryMoveAI(\n\t\t\t\t\t\t$author$project$Update$reset(model)),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;\nvar $elm$core$Array$indexedMap = F2(\n\tfunction (func, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar initialBuilder = {\n\t\t\tg: _List_Nil,\n\t\t\ta: 0,\n\t\t\te: A3(\n\t\t\t\t$elm$core$Elm$JsArray$indexedMap,\n\t\t\t\tfunc,\n\t\t\t\t$elm$core$Array$tailIndex(len),\n\t\t\t\ttail)\n\t\t};\n\t\tvar helper = F2(\n\t\t\tfunction (node, builder) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldl, helper, builder, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\tvar offset = builder.a * $elm$core$Array$branchFactor;\n\t\t\t\t\tvar mappedLeaf = $elm$core$Array$Leaf(\n\t\t\t\t\t\tA3($elm$core$Elm$JsArray$indexedMap, func, offset, leaf));\n\t\t\t\t\treturn {\n\t\t\t\t\t\tg: A2($elm$core$List$cons, mappedLeaf, builder.g),\n\t\t\t\t\t\ta: builder.a + 1,\n\t\t\t\t\t\te: builder.e\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\treturn A2(\n\t\t\t$elm$core$Array$builderToArray,\n\t\t\ttrue,\n\t\t\tA3($elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));\n\t});\nvar $author$project$Update$MoveMsg = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $elm$core$Tuple$second = function (_v0) {\n\tvar y = _v0.b;\n\treturn y;\n};\nvar $elm$html$Html$Attributes$classList = function (classes) {\n\treturn $elm$html$Html$Attributes$class(\n\t\tA2(\n\t\t\t$elm$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$elm$core$Tuple$first,\n\t\t\t\tA2($elm$core$List$filter, $elm$core$Tuple$second, classes))));\n};\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$get, key, dict);\n\t\tif (!_v0.$) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar $elm$core$Set$member = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0;\n\t\treturn A2($elm$core$Dict$member, key, dict);\n\t});\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $author$project$View$cellView = F3(\n\tfunction (pos, movesMap, cell) {\n\t\tvar pieceView = function (piece) {\n\t\t\treturn A2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$classList(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2('piece', true),\n\t\t\t\t\t\t\t\t_Utils_Tuple2('black', !piece),\n\t\t\t\t\t\t\t\t_Utils_Tuple2('white', piece === 1)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil);\n\t\t};\n\t\tvar cellAttributes = A2($elm$core$Set$member, pos, movesMap) ? _List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$classList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2('cell', true),\n\t\t\t\t\t\t_Utils_Tuple2('movable-cell', true)\n\t\t\t\t\t])),\n\t\t\t\t$elm$html$Html$Events$onClick(\n\t\t\t\t$author$project$Update$MoveMsg(pos))\n\t\t\t]) : _List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$classList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2('cell', true)\n\t\t\t\t\t]))\n\t\t\t]);\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\tcellAttributes,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tfunction () {\n\t\t\t\t\tif (cell.$ === 1) {\n\t\t\t\t\t\treturn A2($elm$html$Html$div, _List_Nil, _List_Nil);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar piece = cell.a;\n\t\t\t\t\t\treturn pieceView(piece);\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;\nvar $author$project$View$rowView = F3(\n\tfunction (y, movesMap, row) {\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'display', 'flex')\n\t\t\t\t]),\n\t\t\t$elm$core$Array$toList(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Array$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (x, cell) {\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$author$project$View$cellView,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(x, y),\n\t\t\t\t\t\t\t\tmovesMap,\n\t\t\t\t\t\t\t\tcell);\n\t\t\t\t\t\t}),\n\t\t\t\t\trow)));\n\t});\nvar $elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _v0.a;\n\t\t\tvar remainingItems = _v0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\t$elm$core$Elm$JsArray$length(jsArray),\n\t\t\t\t$elm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{g: nodeList, a: nodeListSize, e: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$elm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn $elm$core$Array$empty;\n\t} else {\n\t\treturn A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar $elm$core$Elm$JsArray$map = _JsArray_map;\nvar $elm$core$Array$map = F2(\n\tfunction (func, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = function (node) {\n\t\t\tif (!node.$) {\n\t\t\t\tvar subTree = node.a;\n\t\t\t\treturn $elm$core$Array$SubTree(\n\t\t\t\t\tA2($elm$core$Elm$JsArray$map, helper, subTree));\n\t\t\t} else {\n\t\t\t\tvar values = node.a;\n\t\t\t\treturn $elm$core$Array$Leaf(\n\t\t\t\t\tA2($elm$core$Elm$JsArray$map, func, values));\n\t\t\t}\n\t\t};\n\t\treturn A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA2($elm$core$Elm$JsArray$map, helper, tree),\n\t\t\tA2($elm$core$Elm$JsArray$map, func, tail));\n\t});\nvar $elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar $elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar $elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = $elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(builder.e)) - tailLen;\n\t\tvar appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, builder.e, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\tg: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.g),\n\t\t\ta: builder.a + 1,\n\t\t\te: A3($elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\tg: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.g),\n\t\t\ta: builder.a + 1,\n\t\t\te: $elm$core$Elm$JsArray$empty\n\t\t} : {g: builder.g, a: builder.a, e: appended});\n\t});\nvar $elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\t$elm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - $elm$core$Array$tailIndex(len),\n\t\t\t\t\t\t$elm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / $elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2($elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2($elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn $elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * $elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\tg: _List_Nil,\n\t\t\t\t\t\ta: 0,\n\t\t\t\t\t\te: A3(\n\t\t\t\t\t\t\t$elm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\t$elm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3($elm$core$List$foldl, $elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar sub = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!$elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (!_v0.$) {\n\t\t\t\t\tvar sub = _v0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - $elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = $elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (!_v0.$) {\n\t\t\tvar sub = _v0.a;\n\t\t\tvar newSub = A3($elm$core$Array$sliceTree, shift - $elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!$elm$core$Elm$JsArray$length(newSub)) ? A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\t$elm$core$Array$SubTree(newSub),\n\t\t\t\tA3($elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar $elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\t$elm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = $elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$logBase,\n\t\t\t\t\t\t$elm$core$Array$branchFactor,\n\t\t\t\t\t\tA2($elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3($elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4($elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$translateIndex = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar $elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2($elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2($elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? $elm$core$Array$empty : A2(\n\t\t\t$elm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2($elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar $LesleyLai$elm_grid$Grid$rows = function (_v0) {\n\tvar w = _v0.f;\n\tvar h = _v0.c;\n\tvar data = _v0.b;\n\treturn A2(\n\t\t$elm$core$Array$map,\n\t\tfunction (y) {\n\t\t\treturn A3($elm$core$Array$slice, w * y, (w * y) + w, data);\n\t\t},\n\t\t$elm$core$Array$fromList(\n\t\t\tA2($elm$core$List$range, 0, h - 1)));\n};\nvar $author$project$View$boardView = F2(\n\tfunction (board, movesMap) {\n\t\tvar rows = $LesleyLai$elm_grid$Grid$rows(board);\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'margin', 'auto'),\n\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'width', '400px')\n\t\t\t\t]),\n\t\t\t$elm$core$Array$toList(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Array$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (y, row) {\n\t\t\t\t\t\t\treturn A3($author$project$View$rowView, y, movesMap, row);\n\t\t\t\t\t\t}),\n\t\t\t\t\trows)));\n\t});\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $author$project$View$currentPlayerView = function (state) {\n\tvar _v0 = state.bW;\n\tif (_v0.$ === 1) {\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t'Current player: ' + ((state.a8 === 1) ? 'White' : 'Black'))\n\t\t\t\t]));\n\t} else {\n\t\tswitch (_v0.a) {\n\t\t\tcase 0:\n\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text('Black Win')\n\t\t\t\t\t\t]));\n\t\t\tcase 1:\n\t\t\t\tvar _v2 = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text('White Win')\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\tvar _v3 = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text('Tie')\n\t\t\t\t\t\t]));\n\t\t}\n\t}\n};\nvar $elm$core$Set$Set_elm_builtin = $elm$core$Basics$identity;\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$core$Set$empty = $elm$core$Dict$empty;\nvar $elm$html$Html$h1 = _VirtualDom_node('h1');\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Set$insert = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0;\n\t\treturn A3($elm$core$Dict$insert, key, 0, dict);\n\t});\nvar $author$project$Update$ResetMsg = {$: 2};\nvar $author$project$Update$ChangeAgentMsg = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$html$Html$p = _VirtualDom_node('p');\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$Icon = F5(\n\tfunction (prefix, name, width, height, path) {\n\t\treturn {X: height, cV: name, bx: path, c3: prefix, ac: width};\n\t});\nvar $lattyware$elm_fontawesome$FontAwesome$Solid$robot = A5($lattyware$elm_fontawesome$FontAwesome$Icon$Icon, 'fas', 'robot', 640, 512, 'M0 256v128c0 17.7 14.3 32 32 32h32V224H32c-17.7 0-32 14.3-32 32zM464 96H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32v64H176c-44.2 0-80 35.8-80 80v272c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V176c0-44.2-35.8-80-80-80zM256 416h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm128 120h-64v-32h64v32zm96 0h-64v-32h64v32zm-32-120c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm192-72h-32v192h32c17.7 0 32-14.3 32-32V256c0-17.7-14.3-32-32-32z');\nvar $lattyware$elm_fontawesome$FontAwesome$Solid$user = A5($lattyware$elm_fontawesome$FontAwesome$Icon$Icon, 'fas', 'user', 448, 512, 'M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z');\nvar $elm$virtual_dom$VirtualDom$attribute = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_attribute,\n\t\t\t_VirtualDom_noOnOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;\nvar $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');\nvar $elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add = F2(\n\tfunction (transform, combined) {\n\t\tswitch (transform.$) {\n\t\t\tcase 0:\n\t\t\t\tvar direction = transform.a;\n\t\t\t\tvar amount = function () {\n\t\t\t\t\tif (!direction.$) {\n\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\treturn by;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\treturn -by;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{bL: combined.bL + amount});\n\t\t\tcase 1:\n\t\t\t\tvar direction = transform.a;\n\t\t\t\tvar _v2 = function () {\n\t\t\t\t\tswitch (direction.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(0, -by);\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(0, by);\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(-by, 0);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar by = direction.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(by, 0);\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar x = _v2.a;\n\t\t\t\tvar y = _v2.b;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{aG: combined.aG + x, aH: combined.aH + y});\n\t\t\tcase 2:\n\t\t\t\tvar rotation = transform.a;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tcombined,\n\t\t\t\t\t{c6: combined.c6 + rotation});\n\t\t\tdefault:\n\t\t\t\tif (!transform.a) {\n\t\t\t\t\tvar _v4 = transform.a;\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tcombined,\n\t\t\t\t\t\t{cC: true});\n\t\t\t\t} else {\n\t\t\t\t\tvar _v5 = transform.a;\n\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\tcombined,\n\t\t\t\t\t\t{cD: true});\n\t\t\t\t}\n\t\t}\n\t});\nvar $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize = 16;\nvar $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform = {cC: false, cD: false, c6: 0, bL: $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize, aG: 0, aH: 0};\nvar $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine = function (transforms) {\n\treturn A3($elm$core$List$foldl, $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add, $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform, transforms);\n};\nvar $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform = function (transforms) {\n\tvar combined = $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine(transforms);\n\treturn _Utils_eq(combined, $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(combined);\n};\nvar $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');\nvar $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg = F3(\n\tfunction (containerWidth, iconWidth, transform) {\n\t\tvar path = 'translate(' + ($elm$core$String$fromFloat((iconWidth / 2) * (-1)) + ' -256)');\n\t\tvar outer = 'translate(' + ($elm$core$String$fromFloat(containerWidth / 2) + ' 256)');\n\t\tvar innerTranslate = 'translate(' + ($elm$core$String$fromFloat(transform.aG * 32) + (',' + ($elm$core$String$fromFloat(transform.aH * 32) + ') ')));\n\t\tvar innerRotate = 'rotate(' + ($elm$core$String$fromFloat(transform.c6) + ' 0 0)');\n\t\tvar flipY = transform.cD ? (-1) : 1;\n\t\tvar scaleY = (transform.bL / $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipY;\n\t\tvar flipX = transform.cC ? (-1) : 1;\n\t\tvar scaleX = (transform.bL / $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipX;\n\t\tvar innerScale = 'scale(' + ($elm$core$String$fromFloat(scaleX) + (', ' + ($elm$core$String$fromFloat(scaleY) + ') ')));\n\t\treturn {\n\t\t\tbj: $elm$svg$Svg$Attributes$transform(\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tinnerTranslate,\n\t\t\t\t\t_Utils_ap(innerScale, innerRotate))),\n\t\t\tbu: $elm$svg$Svg$Attributes$transform(outer),\n\t\t\tbx: $elm$svg$Svg$Attributes$transform(path)\n\t\t};\n\t});\nvar $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$allSpace = _List_fromArray(\n\t[\n\t\t$elm$svg$Svg$Attributes$x('0'),\n\t\t$elm$svg$Svg$Attributes$y('0'),\n\t\t$elm$svg$Svg$Attributes$width('100%'),\n\t\t$elm$svg$Svg$Attributes$height('100%')\n\t]);\nvar $elm$svg$Svg$clipPath = $elm$svg$Svg$trustedNode('clipPath');\nvar $elm$svg$Svg$Attributes$clipPath = _VirtualDom_attribute('clip-path');\nvar $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');\nvar $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$corePath = F2(\n\tfunction (attrs, icon) {\n\t\treturn A2(\n\t\t\t$elm$svg$Svg$path,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('currentColor'),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$d(icon.bx)\n\t\t\t\t\t]),\n\t\t\t\tattrs),\n\t\t\t_List_Nil);\n\t});\nvar $elm$svg$Svg$defs = $elm$svg$Svg$trustedNode('defs');\nvar $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');\nvar $elm$svg$Svg$Attributes$id = _VirtualDom_attribute('id');\nvar $elm$svg$Svg$mask = $elm$svg$Svg$trustedNode('mask');\nvar $elm$svg$Svg$Attributes$mask = _VirtualDom_attribute('mask');\nvar $elm$svg$Svg$Attributes$maskContentUnits = _VirtualDom_attribute('maskContentUnits');\nvar $elm$svg$Svg$Attributes$maskUnits = _VirtualDom_attribute('maskUnits');\nvar $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform = F3(\n\tfunction (transform, outer, inner) {\n\t\tvar maskRect = A2(\n\t\t\t$elm$svg$Svg$rect,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$svg$Svg$Attributes$fill('white'),\n\t\t\t\t$lattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t_List_Nil);\n\t\tvar maskInnerGroup = A2(\n\t\t\t$elm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[transform.bj]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$path,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\ttransform.bx,\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('black'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$d(inner.bx)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil)\n\t\t\t\t]));\n\t\tvar maskOuterGroup = A2(\n\t\t\t$elm$svg$Svg$g,\n\t\t\t_List_fromArray(\n\t\t\t\t[transform.bu]),\n\t\t\t_List_fromArray(\n\t\t\t\t[maskInnerGroup]));\n\t\tvar maskId = 'mask-' + inner.cV;\n\t\tvar maskTag = A2(\n\t\t\t$elm$svg$Svg$mask,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$id(maskId),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$maskUnits('userSpaceOnUse'),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$maskContentUnits('userSpaceOnUse')\n\t\t\t\t\t]),\n\t\t\t\t$lattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t_List_fromArray(\n\t\t\t\t[maskRect, maskOuterGroup]));\n\t\tvar clipId = 'clip-' + outer.cV;\n\t\tvar defs = A2(\n\t\t\t$elm$svg$Svg$defs,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$svg$Svg$clipPath,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$id(clipId)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2($lattyware$elm_fontawesome$FontAwesome$Icon$corePath, _List_Nil, outer)\n\t\t\t\t\t\t])),\n\t\t\t\t\tmaskTag\n\t\t\t\t]));\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tdefs,\n\t\t\t\tA2(\n\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('currentColor'),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$clipPath('url(#' + (clipId + ')')),\n\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$mask('url(#' + (maskId + ')'))\n\t\t\t\t\t\t]),\n\t\t\t\t\t$lattyware$elm_fontawesome$FontAwesome$Icon$allSpace),\n\t\t\t\t_List_Nil)\n\t\t\t]);\n\t});\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform = F2(\n\tfunction (transform, icon) {\n\t\tif (!transform.$) {\n\t\t\tvar trans = transform.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[trans.bu]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[trans.bj]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$lattyware$elm_fontawesome$FontAwesome$Icon$corePath,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[trans.bx]),\n\t\t\t\t\t\t\t\ticon)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\treturn A2($lattyware$elm_fontawesome$FontAwesome$Icon$corePath, _List_Nil, icon);\n\t\t}\n\t});\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked = F4(\n\tfunction (attrs, transforms, outer, inner) {\n\t\tvar _v0 = function () {\n\t\t\tif (!outer.$) {\n\t\t\t\tvar mask = outer.a;\n\t\t\t\treturn _Utils_Tuple2(mask.ac, mask.X);\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(inner.ac, inner.X);\n\t\t\t}\n\t\t}();\n\t\tvar width = _v0.a;\n\t\tvar height = _v0.b;\n\t\tvar classes = 'svg-inline--fa fa-' + (inner.cV + (' fa-w-' + $elm$core$String$fromInt(\n\t\t\t$elm$core$Basics$ceiling((width / height) * 16))));\n\t\tvar svgTransform = A2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tA2($lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg, width, inner.ac),\n\t\t\t$lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform(transforms));\n\t\tvar contents = function () {\n\t\t\tif (!outer.$) {\n\t\t\t\tvar mask = outer.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$lattyware$elm_fontawesome$FontAwesome$Icon$viewMaskedWithTransform,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\tA3($lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg, width, inner.ac, $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform),\n\t\t\t\t\t\tsvgTransform),\n\t\t\t\t\tmask,\n\t\t\t\t\tinner);\n\t\t\t} else {\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($lattyware$elm_fontawesome$FontAwesome$Icon$viewWithTransform, svgTransform, inner)\n\t\t\t\t\t]);\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$elm$svg$Svg$svg,\n\t\t\t_Utils_ap(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$class(classes),\n\t\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'role', 'img'),\n\t\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'aria-hidden', 'true'),\n\t\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'xmlns', 'http://www.w3.org/2000/svg'),\n\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox(\n\t\t\t\t\t\t'0 0 ' + ($elm$core$String$fromInt(width) + (' ' + $elm$core$String$fromInt(height))))\n\t\t\t\t\t]),\n\t\t\t\tattrs),\n\t\t\tcontents);\n\t});\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$viewTransformed = F3(\n\tfunction (attrs, transforms, icon) {\n\t\treturn A4($lattyware$elm_fontawesome$FontAwesome$Icon$viewMasked, attrs, transforms, $elm$core$Maybe$Nothing, icon);\n\t});\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$viewStyled = function (attrs) {\n\treturn A2($lattyware$elm_fontawesome$FontAwesome$Icon$viewTransformed, attrs, _List_Nil);\n};\nvar $lattyware$elm_fontawesome$FontAwesome$Icon$view = $lattyware$elm_fontawesome$FontAwesome$Icon$viewStyled(_List_Nil);\nvar $author$project$View$agentStatusView = F3(\n\tfunction (model, player, pieceCount) {\n\t\tvar _v0 = function () {\n\t\t\tif (!player) {\n\t\t\t\treturn _Utils_Tuple2(!model.ce, 'Black Player');\n\t\t\t} else {\n\t\t\t\treturn _Utils_Tuple2(!model.dI, 'White Player');\n\t\t\t}\n\t\t}();\n\t\tvar isHuman = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar role = isHuman ? ' (Human)' : ' (AI)';\n\t\tvar _v2 = isHuman ? _Utils_Tuple2('agent-icon-active', 'agent-icon-inactive') : _Utils_Tuple2('agent-icon-inactive', 'agent-icon-active');\n\t\tvar humanClass = _v2.a;\n\t\tvar aiClass = _v2.b;\n\t\treturn A2(\n\t\t\t$elm$html$Html$p,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$classList(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('agent', true)\n\t\t\t\t\t\t]))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2('agent-icon', true),\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(aiClass, true)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t$elm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tA2($author$project$Update$ChangeAgentMsg, player, 1))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$lattyware$elm_fontawesome$FontAwesome$Icon$view($lattyware$elm_fontawesome$FontAwesome$Solid$robot)\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tA2($author$project$Update$ChangeAgentMsg, player, 0)),\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2('agent-icon', true),\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(humanClass, true)\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$lattyware$elm_fontawesome$FontAwesome$Icon$view($lattyware$elm_fontawesome$FontAwesome$Solid$user)\n\t\t\t\t\t\t])),\n\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\tname + (role + (' Score: ' + $elm$core$String$fromInt(pieceCount))))\n\t\t\t\t]));\n\t});\nvar $elm$html$Html$article = _VirtualDom_node('article');\nvar $elm$html$Html$button = _VirtualDom_node('button');\nvar $author$project$View$scoresView = function (model) {\n\tvar _v0 = $author$project$Update$countPieces(model.cG.a3);\n\tvar whiteCount = _v0.a;\n\tvar blackCount = _v0.b;\n\treturn A2(\n\t\t$elm$html$Html$article,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA3($author$project$View$agentStatusView, model, 0, blackCount),\n\t\t\t\tA3($author$project$View$agentStatusView, model, 1, whiteCount),\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Update$ResetMsg)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text('Restart')\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$View$view = function (model) {\n\tvar movesSet = A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (move, set) {\n\t\t\t\treturn A2($elm$core$Set$insert, move, set);\n\t\t\t}),\n\t\t$elm$core$Set$empty,\n\t\tmodel.c2);\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$text('Reversi-Elm-V2')\n\t\t\t\t\t])),\n\t\t\t\tA2($author$project$View$boardView, model.cG.a3, movesSet),\n\t\t\t\t$author$project$View$currentPlayerView(model.cG),\n\t\t\t\t$author$project$View$scoresView(model)\n\t\t\t]));\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{\n\t\tcO: function (_v0) {\n\t\t\treturn $author$project$Update$init;\n\t\t},\n\t\tdn: $elm$core$Basics$always($elm$core$Platform$Sub$none),\n\t\tdG: $author$project$Update$update,\n\t\tdH: $author$project$View$view\n\t});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\t$elm$json$Json$Decode$succeed(0))(0)}});}(this));","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport registerServiceWorker from './registerServiceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\nregisterServiceWorker();\n"],"sourceRoot":""}